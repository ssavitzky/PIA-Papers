%!PS-Adobe-3.0
%%BoundingBox: 54 72 558 720
%%Creator: Mozilla (NetScape) HTML->PS
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 21
%%PageOrder: Ascend
%%Title: White Paper: Web Applications and the PIA
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
 /two /three /four /five /six /seven /eight /nine /colon /semicolon
 /less /equal /greater /question /at /A /B /C /D /E
 /F /G /H /I /J /K /L /M /N /O
 /P /Q /R /S /T /U /V /W /X /Y
 /Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
 /d /e /f /g /h /i /j /k /l /m
 /n /o /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
 /space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
 /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
 /threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
 /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
 /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
 /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
 /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/c { matrix currentmatrix currentpoint translate
     3 1 roll scale newpath 0 0 1 0 360 arc setmatrix } bind def
/F0
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f0 { /F0 findfont exch scalefont setfont } bind def
/F1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f1 { /F1 findfont exch scalefont setfont } bind def
/F2
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f2 { /F2 findfont exch scalefont setfont } bind def
/F3
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f3 { /F3 findfont exch scalefont setfont } bind def
/F4
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f4 { /F4 findfont exch scalefont setfont } bind def
/F5
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f5 { /F5 findfont exch scalefont setfont } bind def
/F6
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f6 { /F6 findfont exch scalefont setfont } bind def
/F7
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/f7 { /F7 findfont exch scalefont setfont } bind def
/rhc {
    {
        currentfile read {
	    dup 97 ge
		{ 87 sub true exit }
		{ dup 48 ge { 48 sub true exit } { pop } ifelse }
	    ifelse
	} {
	    false
	    exit
	} ifelse
    } loop
} bind def

/cvgray { % xtra_char npix cvgray - (string npix long)
    dup string
    0
    {
	rhc { cvr 4.784 mul } { exit } ifelse
	rhc { cvr 9.392 mul } { exit } ifelse
	rhc { cvr 1.824 mul } { exit } ifelse
	add add cvi 3 copy put pop
	1 add
	dup 3 index ge { exit } if
    } loop
    pop
    3 -1 roll 0 ne { rhc { pop } if } if
    exch pop
} bind def

/smartimage12rgb { % w h b [matrix] smartimage12rgb -
    /colorimage where {
	pop
	{ currentfile rowdata readhexstring pop }
	false 3
	colorimage
    } {
	exch pop 8 exch
	3 index 12 mul 8 mod 0 ne { 1 } { 0 } ifelse
	4 index
	6 2 roll
	{ 2 copy cvgray }
	image
	pop pop
    } ifelse
} def
/cshow { dup stringwidth pop 2 div neg 0 rmoveto show } bind def
/rshow { dup stringwidth pop neg 0 rmoveto show } bind def
/BeginEPSF {
  /b4_Inc_state save def
  /dict_count countdictstack def
  /op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
  10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  { pop languagelevel 1 ne
    { false setstrokeadjust false setoverprint } if
  } if
} bind def
/EndEPSF {
  count op_count sub {pop} repeat
  countdictstack dict_count sub {end} repeat
  b4_Inc_state restore
} bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 697.5 moveto
24 f1
(Ri) show
23.9 697.5 moveto
24 f3
(Source.org) show
132.5 697.5 moveto
24 f1
( / ) show
151.1 697.5 moveto
24 f1
(White Papers) show
290.4 697.5 moveto
24 f1
( / Web Applications) show
0 669.9 moveto
24 f1
(and the PIA) show
0 638.4 moveto
14 f1
(Foreword) show
28 611.6 moveto
12 f2
(This White Paper is intended for web developers: it describes a design and development) show
28 598.5 moveto
12 f2
(style well-suited to creating customizable Web applications. While this paper discusses) show
28 585.4 moveto
12 f2
(development in the context of the PIA technology, the fundamental philosophy, which can be) show
28 572.3 moveto
12 f2
(roughly characterized as "Web application maintenance is mostly a task of document) show
28 559.2 moveto
12 f2
(management and should not require specialized programming skills or tools," applies) show
28 546.1 moveto
12 f2
(equally well to other platforms. Several other technologies, such as Meta-HTML, PHP, and) show
28 533 moveto
12 f2
(the proposed Apache XML initiative, support some of the "active XML" features of the PIA.) show
28 519.9 moveto
12 f2
(We encourage the evolution and convergence of these technologies to a standard,) show
28.8 506.8 moveto
12 f2
(platform-independent design for Web applications that facilitates shared development and) show
28 493.7 moveto
12 f2
(ongoing maintenance. ) show
0 465 moveto
14 f1
(Table of Contents:) show
0 424.7 moveto
12 f0
(    ) show
11.9 424.7 moveto
12 f0
(1: ) show
24.2 424.7 moveto
12 f0
(Introduction: customizable Web applications) show
239.8 424.7 moveto
12 f0
( ) show
0 411.4 moveto
12 f0
(        ) show
23.9 411.4 moveto
10 f0
(1.1: What are Web applications?) show
154.7 411.4 moveto
12 f0
( ) show
0 398.1 moveto
12 f0
(        ) show
23.9 398.1 moveto
10 f0
(1.2: Types of Web applications) show
149.1 398.1 moveto
12 f0
( ) show
0 384.8 moveto
12 f0
(        ) show
23.9 384.8 moveto
10 f0
(1.3: Technologies for Web Applications) show
184.7 384.8 moveto
12 f0
( ) show
0 371.5 moveto
12 f0
(        ) show
23.9 371.5 moveto
10 f0
(1.4: The life cycle of Web applications) show
179.7 371.5 moveto
12 f0
( ) show
0 358.2 moveto
12 f0
(        ) show
23.9 358.2 moveto
10 f0
(1.5: Tools and Methodologies) show
143.9 358.2 moveto
12 f0
( ) show
0 344.9 moveto
12 f0
(        ) show
23.9 344.9 moveto
10 f0
(1.6: Customization) show
100 344.9 moveto
12 f0
( ) show
0 331.6 moveto
12 f0
(    ) show
11.9 331.6 moveto
12 f0
(2: ) show
24.2 331.6 moveto
12 f0
(The PIA Approach) show
115.5 331.6 moveto
12 f0
( ) show
0 318.3 moveto
12 f0
(        ) show
23.9 318.3 moveto
10 f0
(2.1: ) show
41.6 318.3 moveto
10 f0
(The PIA's Document-Processing System) show
205.7 318.3 moveto
12 f0
( ) show
0 305 moveto
12 f0
(        ) show
23.9 305 moveto
10 f0
(2.2: ) show
41.6 305 moveto
10 f0
(Flexible site configuration) show
147.1 305 moveto
12 f0
( ) show
0 291.7 moveto
12 f0
(        ) show
23.9 291.7 moveto
10 f0
(2.3: ) show
41.6 291.7 moveto
10 f0
(Agents and event based processes) show
177.1 291.7 moveto
12 f0
( ) show
0 278.4 moveto
12 f0
(    ) show
11.9 278.4 moveto
12 f0
(3: ) show
24.2 278.4 moveto
12 f0
(Comparison with Other Systems) show
180.5 278.4 moveto
12 f0
( ) show
0 265.1 moveto
12 f0
(        ) show
23.9 265.1 moveto
10 f0
(3.1: Conventional platforms) show
136.4 265.1 moveto
12 f0
( ) show
0 251.8 moveto
12 f0
(        ) show
23.9 251.8 moveto
10 f0
(3.2: Server-side extension languages) show
170.5 251.8 moveto
12 f0
( ) show
0 238.5 moveto
12 f0
(        ) show
23.9 238.5 moveto
10 f0
(3.3: XML-based approaches) show
137.4 238.5 moveto
12 f0
( ) show
0 225.2 moveto
12 f0
(    ) show
11.9 225.2 moveto
12 f0
(4: ) show
24.2 225.2 moveto
12 f0
(Technical details) show
105.8 225.2 moveto
12 f0
( ) show
0 211.9 moveto
12 f0
(        ) show
23.9 211.9 moveto
10 f0
(4.1: Performance and portability) show
153.8 211.9 moveto
12 f0
( ) show
0 198.6 moveto
12 f0
(        ) show
23.9 198.6 moveto
10 f0
(4.2: Server integration) show
113.6 198.6 moveto
12 f0
( ) show
0 185.3 moveto
12 f0
(        ) show
23.9 185.3 moveto
10 f0
(4.3: Integration with other applications) show
179.7 185.3 moveto
12 f0
( ) show
0 172 moveto
12 f0
(        ) show
23.9 172 moveto
10 f0
(4.4: Embedded applications) show
135.2 172 moveto
12 f0
( ) show
0 158.7 moveto
12 f0
(    ) show
11.9 158.7 moveto
12 f0
(5: ) show
24.2 158.7 moveto
12 f0
(Conclusions) show
83.5 158.7 moveto
12 f0
( ) show
0 145.4 moveto
12 f0
(        ) show
23.9 145.4 moveto
10 f0
(5.1: Would the PIA be useful for ) show
157.9 145.4 moveto
10 f2
(your) show
176.4 145.4 moveto
10 f0
( web application?) show
246.9 145.4 moveto
12 f0
( ) show
0 136.3 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 103.2 moveto
14 f1
(Abstract) show
28 76.2 moveto
12 f0
(The World Wide Web has given rise to a new category of applications: programs whose) show
pagelevel restore
showpage
%%Page: 2 2
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(primary user interface is a web browser, and which consist of a large amount of information) show
28 695.9 moveto
12 f0
(or ``documents'' mixed in with a small amount of behavior expressed as ``code.'' In effect,) show
28 682.6 moveto
12 f0
(applications have become specialized web servers. ) show
28 656 moveto
12 f0
(Given the ever-changing nature of information and the Web environment, easy) show
28 642.7 moveto
12 f0
(customization and long-term maintenance should be considered key factors for Web) show
28 629.4 moveto
12 f0
(application development. This paper describes an XML based design approach and) show
28 616.1 moveto
12 f0
(development methodology that supports ongoing maintenance while minimizing the need for) show
28 602.8 moveto
12 f0
(special technical or programming skills. Most appropriate for applications deployed by) show
28 589.5 moveto
12 f0
(smaller organizations without significant IT support, these design principles are embodied by) show
28 576.2 moveto
12 f0
(the Platform for Information Applications \(PIA\). ) show
28 549.6 moveto
12 f0
(PIA based Web applications consist primarily of XML documents written using a set of) show
28 536.3 moveto
12 f0
(domain specific tags. \(<h1> and <a> are examples of HTML tags. XML, which stands for) show
28 523 moveto
12 f0
(eXtensible Markup Language, is similar to HTML but allows tags to be defined and used as) show
28 509.7 moveto
12 f0
(needed.\) Maintenance means editing these documents using any standard XML editor. The) show
28 496.4 moveto
12 f0
(flexible PIA engine serves pages in response to client requests by dynamically processing) show
28 483.1 moveto
12 f0
(these documents in accordance with developer defined semantics. This processing may) show
28 469.8 moveto
12 f0
(include simple tag substitution, page transformation, database lookup and insertions, or any) show
28 456.5 moveto
12 f0
(other functions appropriate to the application domain. In essence, the tags provide a) show
28 443.2 moveto
12 f0
(specialized vocabulary available to use in customizing the application. ) show
28 416.6 moveto
12 f0
(This approach promises platform independent, easily customizable Web applications. XML) show
28 403.3 moveto
12 f0
(support in the form of editors and other tools already exists on essentially all platforms and) show
28 390 moveto
12 f0
(continues to grow. Specifying the processing in XML not only makes the logic more) show
28 376.7 moveto
12 f0
(accessible but restricts the dependence on a particular computing environment to the) show
28 363.4 moveto
12 f0
(implementation of a few tags. In the PIA, semantics for the small set of primitive or "basic") show
28 350.1 moveto
12 f0
(tags are defined in Java, while the majority of application-specific \(defined by developers\)) show
28 336.8 moveto
12 f0
(tags are specified in terms of these primitives. ) show
28 310.2 moveto
12 f0
(Freely available as open source, the PIA software, written in pure Java, is available from) show
28 296.9 moveto
10 f4
(RiSource.org) show
100 296.9 moveto
12 f0
( and includes interfaces that conform to all relevant standards, including the) show
28 283.6 moveto
12 f0
(W3C's Document Object Model \(DOM\), and the Simple API for XML \(SAX\). RiSource.org) show
28 270.3 moveto
12 f0
(also distributes and helps coordinate the development of open source Web applications) show
28 257 moveto
12 f0
(including as a workflow system, shared calendar, Web site management tool, and a personal) show
28 243.7 moveto
12 f0
(``browsing assistant.'' As the technology for developing and deploying XML based Web) show
28 230.4 moveto
12 f0
(applications becomes standardized, RiSource.org will help facilitate the collaboration of the) show
28 217.1 moveto
12 f0
(expanding pool of developers who create and maintain Web applications. ) show
201 193.2 moveto
10 f4
(table of contents) show
0 184.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 147.3 moveto
18 f1
(1:) show
14.9 147.3 moveto
18 f1
( ) show
19.4 147.3 moveto
18 f1
(Introduction: customizable Web applications) show
0 117.1 moveto
14 f1
(1.1:) show
22.1 117.1 moveto
14 f1
( What are Web applications?) show
0 90.1 moveto
12 f0
(The World Wide Web as we know it today represents not one but ) show
317.6 90.1 moveto
12 f2
(two) show
334.9 90.1 moveto
12 f0
( revolutions in the world of) show
0 76.8 moveto
12 f0
(computing. The first was to transform the ) show
202.6 76.8 moveto
12 f2
(entire internet) show
271.1 76.8 moveto
12 f0
( into one huge collection of documents, each) show
pagelevel restore
showpage
%%Page: 3 3
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(potentially no more than a mouse-click away from any other. The second, less obvious revolution was to) show
0 695.9 moveto
12 f0
(transform ) show
49.6 695.9 moveto
12 f2
(services) show
88.2 695.9 moveto
12 f0
( into collections of ) show
180.8 695.9 moveto
12 f2
(active) show
209.4 695.9 moveto
12 f0
( documents. ) show
0 668.8 moveto
12 f1
(A web application is a computing service accessed through the web.) show
344.9 668.8 moveto
12 f0
( It consists of a web server -- the) show
0 655.5 moveto
12 f0
(``engine'' that makes documents available to browsers -- and a collection of documents, some of which) show
0 642.2 moveto
12 f0
(are ``) show
25.6 642.2 moveto
12 f2
(active) show
54.2 642.2 moveto
12 f0
(,'' i.e. they make the engine ``do things'' like order a book or buy stocks for the client. ) show
0 615.6 moveto
12 f0
(This highly efficient method of delivering services represents a potentially huge productivity gain for) show
0 602.3 moveto
12 f0
(both providers and customers. Amazon's book recommendations and 1-Click ordering can literally pay) show
0 589 moveto
12 f0
(for the cost of a book in the amount of time and effort it saves. ) show
0 562.4 moveto
12 f0
(Unfortunately the overhead costs of developing and maintaining Web applications limits them to large) show
0 549.1 moveto
12 f0
(organizations well supported by an IT infrastructure. Even though most Web applications consist) show
0 535.8 moveto
12 f0
(primarily of \(unstructured\) information with small amounts of embedded software \(what Tim O'Reilly) show
0 522.5 moveto
12 f0
(has called ) show
50.6 522.5 moveto
12 f0
(Infoware) show
93.9 522.5 moveto
12 f0
(\), they tend to require the same development tools and skills as ``traditional'') show
0 509.2 moveto
12 f0
(software applications. Development and modification of an application requires a programmer, someone) show
0 495.9 moveto
12 f0
(whose primary job is translating the desired behavior into a machine language. This is not unlike the) show
0 482.6 moveto
12 f0
(state of numeric computing before the advent of spreadsheets when financial analyst required assistance) show
0 469.3 moveto
12 f0
(to translate their formulas into Fortran programs. This paper describes an approach to building Web) show
0 456 moveto
12 f0
(applications that reduces the overhead costs making it possible for smaller organizations and individuals) show
0 442.7 moveto
12 f0
(to realize the efficiency gains of providing their services via the Web. ) show
0 413.8 moveto
14 f1
(1.2:) show
22.1 413.8 moveto
14 f1
( Types of Web applications) show
0 386.8 moveto
12 f0
(Consider five different types of web applications: ) show
12.5 359.7 moveto
12 f0
(1.) show
28 359.7 moveto
12 f1
(Public applications) show
125.6 359.7 moveto
12 f0
( ) show
28 346.4 moveto
12 f0
(Sites like the ``killer apps'' mentioned above that provide services for thousands or even millions) show
28 333.1 moveto
12 f0
(of clients around the world. ) show
12.5 306 moveto
12 f0
(2.) show
28 306 moveto
12 f1
(Enterprise applications) show
147.6 306 moveto
12 f0
( ) show
28 292.7 moveto
12 f0
(``Intranet'' sites, operating ) show
159.9 292.7 moveto
12 f2
(inside) show
188.5 292.7 moveto
12 f0
( an organization at the enterprise level. Similar in many ways to) show
28 279.4 moveto
12 f0
(public applications, these might include HR systems, procurement systems, and other) show
28 266.1 moveto
12 f0
(companywide functions. ) show
12.5 239 moveto
12 f0
(3.) show
28 239 moveto
12 f1
(Group applications) show
127 239 moveto
12 f0
( ) show
28 225.7 moveto
12 f0
(Applications that serve a workgroup or office. These include a number of common functions such) show
28 212.4 moveto
12 f0
(as scheduling or document management systems, and ad-hoc functions specific to a particular) show
28 199.1 moveto
12 f0
(group e.g. a Web site for an architectural design project, job control for a print shop, or access to) show
28 185.8 moveto
12 f0
(CVS repository for a software development group. Usually accessed over a local network by a) show
28 172.5 moveto
12 f0
(small number of users, these applications are generally maintained by the members of the group) show
28 159.2 moveto
12 f0
(they serve, with little or no IT support. ) show
12.5 132.1 moveto
12 f0
(4.) show
28 132.1 moveto
12 f1
(Personal applications) show
137.6 132.1 moveto
12 f0
( ) show
28 118.8 moveto
12 f0
(Applications used by a ) show
140.6 118.8 moveto
12 f2
(single) show
169.2 118.8 moveto
12 f0
( user including calendaring and other personal productivity functions.) show
28 105.5 moveto
12 f0
(They usually run on a desktop PC, but the web interface makes them easily accessible from) show
28 92.2 moveto
12 f0
(anywhere on the local network, and potentially from anywhere in the world. \(The distinction) show
28 78.9 moveto
12 f0
(between group and personal applications is a bit blurry -- personal applications generally have a) show
pagelevel restore
showpage
%%Page: 4 4
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(single owner of the data. These might include everything from "MyYahoo" to AvantGo to) show
28 695.9 moveto
12 f0
(StarOffice with the latter pointing to another area for consideration, "application service) show
28 682.6 moveto
12 f0
(providers." We probably want to focus on local applications and put things like myyahoo in the) show
28 669.3 moveto
12 f0
(category of public sites. So the examples here might be history management.\) ) show
12.5 642.2 moveto
12 f0
(5.) show
28 642.2 moveto
12 f1
(Embedded applications) show
148.3 642.2 moveto
12 f0
( ) show
28 628.9 moveto
12 f0
(Embedded applications run on an appliance-like device that is not a general-purpose computer;) show
28 615.6 moveto
12 f0
(examples include printers, scanners, facsimile machines, and networked storage devices.) show
28 602.3 moveto
12 f0
(Increasingly, these devices are being built with network access and a web-based user interface. ) show
0 575.7 moveto
12 f0
(Each type of application has different requirements, support, and performance characteristics. Public and) show
0 562.4 moveto
12 f0
(enterprise applications must handle large numbers of simultaneous users with 24/7 accessibility. These) show
0 549.1 moveto
12 f0
(applications generally have full-time staff devoted to their maintenance. Group applications generally) show
0 535.8 moveto
12 f0
(have a relatively small number of users but must constantly evolve as the information and group needs) show
0 522.5 moveto
12 f0
(change. Embedded applications must be very robust and may be deployed in harsh environments with) show
0 509.2 moveto
12 f0
(no local support. ) show
0 482.6 moveto
12 f0
(Existing Web application designs and development tools are most appropriate for public and enterprise) show
0 469.3 moveto
12 f0
(applications. These applications generally have well-defined software components that are developed) show
0 456 moveto
12 f0
(and maintained by a support group. In contrast, our design methodology seems more appropriate for) show
0 442.7 moveto
12 f0
(group applications intended to be customized and maintained by the people who use them. Furthermore,) show
0 429.4 moveto
12 f0
(this XML based approach provides a safe mechanism for extending and customizing applications in the) show
0 416.1 moveto
12 f0
(field, a useful feature for embedded applications. ) show
0 389.5 moveto
12 f0
(Before describing our approach in detail, we first review the standard technologies and life-cycle for) show
0 376.2 moveto
12 f0
(Web applications. ) show
0 347.3 moveto
14 f1
(1.3:) show
22.1 347.3 moveto
14 f1
( Technologies for Web Applications) show
0 320.3 moveto
12 f0
(There are three main ways of making documents on a web site ``active:'' ) show
12.5 293.2 moveto
12 f0
(1.) show
28 293.2 moveto
12 f1
(CGI scripts.) show
90.6 293.2 moveto
12 f0
( ) show
28 279.9 moveto
12 f0
(This is the ``traditional'' method of building a web application: all the actions are performed by) show
28 266.6 moveto
12 f0
(programs, ``scripts,'' that are started by the server in response to particular URL's. The script then) show
28 253.3 moveto
12 f0
(performs any necessary form processing, computes a response, and sends that response back to the) show
28 240 moveto
12 f0
(browser. The interface between the server and the script is the ``Common Gateway Interface'' --) show
28 226.7 moveto
12 f0
(CGI. ) show
12.5 199.6 moveto
12 f0
(2.) show
28 199.6 moveto
12 f1
(Servlets) show
68.6 199.6 moveto
12 f0
( and other server extensions. ) show
28 186.3 moveto
12 f0
(Servlets are little pieces of Java code that the server transfers control to in response to particular) show
28 173 moveto
12 f0
(URL's. Apart from the fact that they run ``inside'' the server rather than as separate processes \(and) show
28 159.7 moveto
12 f0
(hence take much less time to start up\), there is little to distinguish servlets from CGI scripts.) show
28 146.4 moveto
12 f0
(Similar techniques are used with other programming languages, for example C and Perl. ) show
12.5 119.3 moveto
12 f0
(3.) show
28 119.3 moveto
12 f1
(Server Pages.) show
97.3 119.3 moveto
12 f0
( ) show
28 106 moveto
12 f0
(This technique involves embedding little bits of code in the web pages, to be ) show
398.9 106 moveto
12 f2
(interpreted) show
452.5 106 moveto
12 f0
( by the) show
28 92.7 moveto
12 f0
(server. Typical embedded extension languages include Visual Basic \(``active server pages''\), Perl,) show
28 79.4 moveto
12 f0
(PHP, and Javascript. It is also possible to embed scripts in compiled languages such as Java \(Sun's) show
pagelevel restore
showpage
%%Page: 5 5
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(JSP\) -- the pages are compiled offline into servlets. Many servers also provide their own) show
28 695.9 moveto
12 f0
(``mini-languages'' \(Apache's ``server-side includes,'' for example\). ) show
0 667 moveto
14 f1
(1.4:) show
22.1 667 moveto
14 f1
( The life cycle of Web applications) show
0 640 moveto
12 f0
(In this section we will examine the development ``life cycle'' of a web application, and touch briefly on) show
0 626.7 moveto
12 f0
(how it differs from that of a software application. ) show
12.5 599.6 moveto
12 f0
(1.) show
28 599.6 moveto
12 f1
(Initial Development) show
129.6 599.6 moveto
12 f0
( ) show
28 573 moveto
12 f0
(Web applications require a different kind of development than traditional software applications.) show
28 559.7 moveto
12 f0
(Software applications have always \(of necessity\) been developed by programmers, sometimes with) show
28 546.4 moveto
12 f0
(the assistance of a few user-interface designers \(all too often called in at the last minute to figure) show
28 533.1 moveto
12 f0
(out why nobody wants to ) show
152.3 533.1 moveto
12 f2
(use) show
168.2 533.1 moveto
12 f0
( the new software\). Most interactive applications end up being about) show
28 519.8 moveto
12 f0
(70% user interface. ) show
28 493.2 moveto
12 f0
(Web applications, on the other hand, typically exceed 95% ``content'' -- as seen by the user, a web) show
28 479.9 moveto
12 f0
(application consists entirely of documents: HTML ``pages'' viewed in a browser. Scattered) show
28 466.6 moveto
12 f0
(through these documents are the buttons and text boxes of a more traditional user interface. ) show
28 440 moveto
12 f0
(The developer's perspective depends in part on which technology they choose. In the early days of) show
28 426.7 moveto
12 f0
(the Web, applications consisted primarily of standard HTML documents with a few CGI scripts to) show
28 413.4 moveto
12 f0
(handle <form> submissions. Initial development consisted of creating HTML pages and then) show
28 400.1 moveto
12 f0
(creating the CGI scripts to handle specific forms. ) show
28 373.5 moveto
12 f0
(It soon became obvious that this approach was too restrictive since the HTML documents were) show
28 360.2 moveto
12 f0
(static and could not reflect updated information. Morevover, developers grew tired of maintaining) show
28 346.9 moveto
12 f0
(the correspondence between the HTML forms and CGI processing. Servlets and similar) show
28 333.6 moveto
12 f0
(technologies solved these problems by generating every page programmatically. In essence, a) show
28 320.3 moveto
12 f0
(method or set of methods is written in your favorite programming language to generate all of the) show
28 307 moveto
12 f0
(pages that constitute the application. Applications could be arbitrarily powerful and all the) show
28 293.7 moveto
12 f0
(information was contained in a single set of \(source code\) files making it easier to maintain the) show
28 280.4 moveto
12 f0
(correspondence between the \(generated\) HTML and processing. Development fit very well with) show
28 267.1 moveto
12 f0
(traditional software development -- generate some specifications and then write software to meet) show
28 253.8 moveto
12 f0
(the specifications. ) show
28 227.2 moveto
12 f0
(Eventually developers realized that modifying source code to fix a missing </table> tag or modify) show
28 213.9 moveto
12 f0
(the navigation bar was a tedious job. Besides that, programming tools do not match very well the) show
28 200.6 moveto
12 f0
(linking structure of Web applications. Server pages provide a compromise solution with regular) show
28 187.3 moveto
12 f0
(HTML pages containing bits and pieces of embedded code that the server interprets dynamic.) show
28 174 moveto
12 f0
(Developers who are comfortable with the syntax for both HTML and the embedded language can) show
28 160.7 moveto
12 f0
(freely intermix the two. Page layouts and prototype applications can be first developed with static) show
28 147.4 moveto
12 f0
(HTML and then augmented with embedded code to provide the desired functions. ) show
28 120.8 moveto
12 f0
(Server pages work reasonably well assuming that all of the developers have similar skill sets,) show
28 107.5 moveto
12 f0
(which includes the ability to write in the pages' embedded programming language, and a standard) show
28 94.2 moveto
12 f0
(development environment. Oftentimes though, the embedded programming language makes the) show
28 80.9 moveto
12 f0
(documents incompatible with standard structured editors \(or the editors produce HTML/XML) show
pagelevel restore
showpage
%%Page: 6 6
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(which breaks the embedded language\) and inaccessible to non-programmers. ) show
28 682.6 moveto
12 f0
(As described in detail below, the PIA approach uses a type of extensible server page. In contrast) show
28 669.3 moveto
12 f0
(with current systems, the embedded ``language'' is pure XML which has several key advantages,) show
28 656 moveto
12 f0
(such as widespread support from designers and development tools. ) show
12.5 628.9 moveto
12 f0
(2.) show
28 628.9 moveto
12 f1
(Deployment) show
89.9 628.9 moveto
12 f0
( ) show
28 602.3 moveto
12 f0
(Once a web application has been developed, it has to be deployed: uploaded to a public server and) show
28 589 moveto
12 f0
(integrated with the company's existing web site. Workgroup applications are deployed on an) show
28 575.7 moveto
12 f2
(intranet) show
66.2 575.7 moveto
12 f0
( server, but the principle is essentially the same. ) show
28 549.1 moveto
12 f0
(Deployment of a web application is a much more traumatic event than the deployment of a piece) show
28 535.8 moveto
12 f0
(of software. Software's availability can be controlled by controlling its distribution. It goes first to) show
28 522.5 moveto
12 f0
(a select group of beta testers, and only then \(after a few rounds of bug fixing and refinement\) to) show
28 509.2 moveto
12 f0
(wide distribution. Even after the software ``hits the shelves'' it will take a long time to ``ramp up'') show
28 495.9 moveto
12 f0
(to full deployment. ) show
28 469.3 moveto
12 f0
(A web application is different. After it is installed on a public server it may be only a matter of) show
28 456 moveto
12 f0
(minutes -- days at the most -- before it is found by the search engines, and shortly thereafter by a) show
28 442.7 moveto
12 f0
(horde of eager users. If a public announcement is made, the ``Slashdot effect'' may innundate the) show
28 429.4 moveto
12 f0
(server with a ``flash crowd'' -- Britannica's web site was all but inaccessible for a week after its) show
28 416.1 moveto
12 f0
(introduction. ) show
28 389.5 moveto
12 f0
(This means that the maintenance cycle is much shorter for a web application than for a software) show
28 376.2 moveto
12 f0
(application. The application's designers may have to respond to problems within minutes, rather) show
28 362.9 moveto
12 f0
(than months. Support for rapid customization is essential. In effect, what software developers call) show
28 349.6 moveto
12 f0
(``rapid prototyping'' goes on even after a web application is released. ) show
12.5 322.5 moveto
12 f0
(3.) show
28 322.5 moveto
12 f1
(Maintenance) show
94.6 322.5 moveto
12 f0
( ) show
28 295.9 moveto
12 f0
(Once a web application has been deployed, the maintenance begins. It has been said that) show
28 282.6 moveto
12 f0
(``software is the only field in which adding a new wing to a building is considered maintenance.'') show
28 269.3 moveto
12 f0
(This is even more true of web applications: a web site may be completely redesigned and rebuilt) show
28 256 moveto
12 f0
(several times over its lifetime. ) show
28 229.4 moveto
12 f0
(There are three aspects to maintaining a web application: monitoring the server to ensure that it's) show
28 216.1 moveto
12 f0
(operating properly, editing and updating the documents, and modifying the software to keep up) show
28 202.8 moveto
12 f0
(with the changes in the documents. ) show
28 176.2 moveto
12 f0
(One of the unpleasant facts of maintenance is that at some point the original developers usually) show
28 162.9 moveto
12 f0
(move on to other projects. This is not a significant problem for the ``content'' portion of a web) show
28 149.6 moveto
12 f0
(site: professional writers and designers are good at maintaining a consistent style at an) show
28 136.3 moveto
12 f0
(organization. It ) show
104.3 136.3 moveto
12 f2
(is) show
112.3 136.3 moveto
12 f0
( a problem for the application's ) show
266.2 136.3 moveto
12 f2
(software) show
307.5 136.3 moveto
12 f0
( -- this is often obscure and poorly) show
28 123 moveto
12 f0
(documented, and the programmers are usually the first people to move on. ) show
28 96.4 moveto
12 f0
(The software portion of a web application, because it is usually written in ``scripting languages'') show
28 83.1 moveto
12 f0
(like Perl, or is broken up into tiny fragments embedded in the site's documents, is almost always) show
pagelevel restore
showpage
%%Page: 7 7
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(harder to maintain than a traditional all-software application. Sometimes it's easier to scrap it and) show
28 695.9 moveto
12 f0
(have a new programming team rewrite large portions, than to figure out some earlier) show
28 682.6 moveto
12 f0
(programmer's tricks. ) show
28 656 moveto
12 f0
(The PIA's document-processing framework, which allows the designer to define special-purpose) show
28 642.7 moveto
12 f0
(tags that are shared among many documents, simplifies maintenance in several ways: ) show
46.1 620.2 moveto
3.3 3.3 c  stroke 
56 616.1 moveto
12 f0
(Definitions are collected into ``tagsets,'' which can contain documentation for each defined) show
56 602.8 moveto
12 f0
(tag. ) show
46.1 593.6 moveto
3.3 3.3 c  stroke 
56 589.5 moveto
12 f0
(Tag definitions are easily modified, and the changes are automatically applied across the) show
56 576.2 moveto
12 f0
(entire website or application. ) show
46.1 567 moveto
3.3 3.3 c  stroke 
56 562.9 moveto
12 f0
(Specialized tags make the application's documents more compact and more readable -- for) show
56 549.6 moveto
12 f0
(example, simple ) show
137.6 549.6 moveto
10 f4
(<header>) show
185.6 549.6 moveto
12 f0
( and ) show
208.9 549.6 moveto
10 f4
(<footer>) show
256.9 549.6 moveto
12 f0
( tags can replace many lines of complex HTML) show
56 536.3 moveto
12 f0
(coding. ) show
46.1 527.1 moveto
3.3 3.3 c  stroke 
56 523 moveto
12 f0
(Because of the PIA's unified XML syntax, even tag definitions can be maintained by) show
56 509.7 moveto
12 f0
(developers with limited programming skills. ) show
28 483.1 moveto
12 f0
(The line between ``application maintenance'' and ``customization'' is extremely fuzzy for web) show
28 469.8 moveto
12 f0
(applications, especially for group or personal applications. The PIA helps make many maintenance) show
28 456.5 moveto
12 f0
(tasks more like the kind of customization that users and web developers are familiar with:) show
28 443.2 moveto
12 f0
(modifying ) show
81 443.2 moveto
12 f2
(documents) show
132.3 443.2 moveto
12 f0
( rather than software. ) show
12.5 416.1 moveto
12 f0
(4.) show
28 416.1 moveto
12 f1
(The Next Project) show
115.2 416.1 moveto
12 f0
( ) show
28 389.5 moveto
12 f0
(One of the major differences between software and infoware shows up when a design and) show
28 376.2 moveto
12 f0
(development team moves on to its next project. A software team's next project is almost certain to) show
28 362.9 moveto
12 f0
(be a variation on its previous one -- another compiler, say, or another printer controller. The team) show
28 349.6 moveto
12 f0
(accumulates knowledge, a suite of tools, and a library of re-useable code that grows with each new) show
28 336.3 moveto
12 f0
(project. ) show
28 309.7 moveto
12 f0
(A web design team, on the other hand, is more likely to move on to something very different. A) show
28 296.4 moveto
12 f0
(few basic tools and scripts may be carried over from one project to the next, but most of the) show
28 283.1 moveto
12 f0
(content -- the information -- will be new. Many server-side scripting languages, in fact, were) show
28 269.8 moveto
12 f0
(designed by web design consulting companies in order to provide a framework for code re-use. ) show
28 243.2 moveto
12 f0
(The PIA's tagsets and configuration files give web designers the equivalent of the software team's) show
28 229.9 moveto
12 f0
(code library. Entire sub-applications \(for example, a calendar\) are also easily portable to new) show
28 216.6 moveto
12 f0
(projects, and very easily customized. ) show
0 187.7 moveto
14 f1
(1.5:) show
22.1 187.7 moveto
14 f1
( Tools and Methodologies) show
0 160.7 moveto
12 f0
(Software development is situated somewhere between a craft and an engineering discipline, and many) show
0 147.4 moveto
12 f0
(design and development tools and methodologies exist to assist the process in all of its stages. Software) show
0 134.1 moveto
12 f0
(designers may use CASE \(Computer Aided Software Engineering\) tools; programmers can count on) show
0 120.8 moveto
12 f0
(syntax-checking compilers, interactive debuggers, and even automatic documentation extractors) show
0 107.5 moveto
12 f0
(\(Javadoc being a recent example\). For maintenance there are tools like profilers for improving the) show
0 94.2 moveto
12 f0
(software's performance, version control systems such as CVS for archiving changes, and bug-tracking) show
0 80.9 moveto
12 f0
(systems for managing requests. ) show
pagelevel restore
showpage
%%Page: 8 8
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 702.3 moveto
12 f0
(Even though the linear ``waterfall model'' of the software development lifecycle has been partially) show
0 689 moveto
12 f0
(abandoned, software development is still fairly straightforward. There may be a flurry of ``rapid) show
0 675.7 moveto
12 f0
(prototyping'' while designing the user interface, and major additions may be made during maintenance,) show
0 662.4 moveto
12 f0
(but on the whole the picture is one of steady progress and gradual evolution. ) show
0 635.8 moveto
12 f0
(Even in the design phase software is relatively straightforward. Whatever specific methodology is being) show
0 622.5 moveto
12 f0
(followed, the application at the end is usually fairly close to what the original requirements specified. ) show
0 595.9 moveto
12 f0
(Web application design and development are significantly more chaotic. Whereas it's almost) show
0 582.6 moveto
12 f0
(inconceivable for a software application to start out as a compiler and end up as web browser \(Emacs) show
0 569.3 moveto
12 f0
(may be one of the few exceptions\), it's not unusual to find a simple search engine that has transformed) show
0 556 moveto
12 f0
(itself overnight into a ``portal site.'' Unlike software development, few \(if any\) methodologies exist to) show
0 542.7 moveto
12 f0
(guide this process. ) show
0 516.1 moveto
12 f0
(Then again, the tools available for building web applications are still very primitive. WYSIWYG editors) show
0 502.8 moveto
12 f0
(are good for documents whose ultimate destination is ink on paper, but they fail miserably when applied) show
0 489.5 moveto
12 f0
(to a web page that may be viewed on anything from a Palm Pilot to a 21-inch monitor. There is little if) show
0 476.2 moveto
12 f0
(any support for complex operations like changing the header and footer of every document on a web) show
0 462.9 moveto
12 f0
(site. There's no support at all for editing documents that may contain bits of scripting mixed in) show
0 449.6 moveto
12 f0
(\(especially if some of it is meant for the browser and some for the server, in two different languages\). ) show
0 423 moveto
12 f0
(Some proprietary Web development platforms, such as Cold Fusion, do support some aspects of) show
0 409.7 moveto
12 f0
(application development and maintenance. Unfortunately these tend to be very expensive, have their) show
0 396.4 moveto
12 f0
(own nonstandard programming component, and of course lock the designers in to a single vendor. ) show
0 367.5 moveto
14 f1
(1.6:) show
22.1 367.5 moveto
14 f1
( Customization) show
0 340.5 moveto
12 f0
(The largest problem facing a workgroup or small business is ) show
293.2 340.5 moveto
12 f2
(customizing) show
350.5 340.5 moveto
12 f0
( their web applications. An) show
0 327.2 moveto
12 f0
(enormous amount of effort can go into designing and maintaining a public or enterprise-level web site,) show
0 313.9 moveto
12 f0
(but the project has the full support of the company's IT department, a large budget for designers and) show
0 300.6 moveto
12 f0
(consultants, and so on. Since the revenues from a public web application are likely to be large \(they may) show
0 287.3 moveto
12 f0
(even be the company's ) show
113.3 287.3 moveto
12 f2
(only) show
133.9 287.3 moveto
12 f0
( revenue stream, as in the case of an Internet-based business\), it's easy to) show
0.8 274 moveto
12 f0
(justify a large expenditure. Similarly, an enterprise-wide intranet site is going to be run by the IT and) show
0 260.7 moveto
12 f0
(HR departments, which can easily justify its cost. ) show
0 234.1 moveto
12 f0
(The situation is far different in a workgroup or small office. The software complexity of the application) show
0 220.8 moveto
12 f0
(is likely to be almost as great as that of a large public web site, but the amount of ) show
391.9 220.8 moveto
12 f2
(information) show
448.5 220.8 moveto
12 f0
( associated) show
0 207.5 moveto
12 f0
(with it is far less, and there may not be even a single full-time person dedicated to maintaining the entire) show
0 194.2 moveto
12 f0
(network, let alone the web applications that make it useful. ) show
0 167.6 moveto
12 f0
(As a result, small-scale web applications are usually ``home-grown'' in somebody's spare time. \(They) show
0 154.3 moveto
12 f0
(might be bought ``off the shelf,'' but shrink-wrapped web applications are exceedingly rare at this) show
0 141 moveto
12 f0
(point.\) They will tend to grow haphazardly, as the result of a series of customizations to meet the) show
0 127.7 moveto
12 f0
(group's changing requirements. Of course, it's almost trivial to customize the ) show
374.9 127.7 moveto
12 f2
(information) show
431.5 127.7 moveto
12 f0
( part of a small) show
0 114.4 moveto
12 f0
(web site. The software is another matter, and will often consist of small CGI scripts downloaded from) show
0 101.1 moveto
12 f0
(the Net and changed as little as possible. ) show
0 74.5 moveto
12 f0
(Web applications that are built using extensible server pages \(for example, ASP, JSP, PHP3, and) show
pagelevel restore
showpage
%%Page: 9 9
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(Meta-HTML\) tend to be easier to customize than those based on standard programming techniques such) show
0 695.9 moveto
12 f0
(as CGI scripts or servlets. The PIA's approach to extensible server pages is particularly simple because,) show
0 682.6 moveto
12 f0
(being XML-based, it is well adapted to existing authoring tools and techniques. ) show
201 658.7 moveto
10 f4
(table of contents) show
0 649.7 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 612.8 moveto
18 f1
(2:) show
14.9 612.8 moveto
18 f1
( ) show
19.4 612.8 moveto
18 f1
(The PIA Approach) show
0 584.9 moveto
12 f0
(The PIA is a highly versatile platform for web applications: it is able to function as either a) show
0 571.6 moveto
12 f0
(``traditional'' web ) show
91.3 571.6 moveto
12 f2
(server) show
121.5 571.6 moveto
12 f0
(, a ) show
135.8 571.6 moveto
12 f2
(client) show
162.6 571.6 moveto
12 f0
(, or a ) show
190.7 571.6 moveto
12 f2
(proxy) show
218 571.6 moveto
12 f0
(. ) show
18.1 549.1 moveto
3.3 3.3 c  fill 
28 545 moveto
12 f0
(As a server, the PIA provides a simple platform for form-processing applications. All of the PIA's) show
28 531.7 moveto
12 f0
(special tags are interpreted on the server: the browser sees nothing but ordinary HTML. But) show
28 518.4 moveto
12 f0
(because the PIA's tags have the same syntax as HTML and XML tags, PIA-based applications can) show
28 505.1 moveto
12 f0
(be developed and modified using the tools all web developers are already familiar with. ) show
18.1 495.9 moveto
3.3 3.3 c  fill 
28 491.8 moveto
12 f0
(As a client, the PIA can download and process pages from other web sites. For example, this can) show
28 478.5 moveto
12 f0
(be used for ``portal'' applications that fetch and reformat news items and stock prices. The PIA) show
28 465.2 moveto
12 f0
(includes a facility for performing an action at specified times or intervals, which can be used for) show
28 451.9 moveto
12 f0
(updating. ) show
18.1 442.7 moveto
3.3 3.3 c  fill 
28 438.6 moveto
12 f0
(The most unusual use of the PIA is as a proxy, situated ) show
294.9 438.6 moveto
12 f2
(between) show
334.2 438.6 moveto
12 f0
( a user's browser and the Web. In) show
28 425.3 moveto
12 f0
(this mode it can operate as a kind of ``surfer's assistant.'' It can, for example, keep a permanent) show
28 412 moveto
12 f0
(browsing history, block access to certain sites, or reformat pages for display on a palmtop. ) show
0 385.4 moveto
12 f0
(Furthermore, the PIA can ) show
125.6 385.4 moveto
12 f2
(combine) show
166.2 385.4 moveto
12 f0
( these aspects, enabling totally new kinds of web applications. The) show
0 372.1 moveto
12 f0
(PIA approach to web applications is based on three main ideas, which we will examine in more detail) show
0 358.8 moveto
12 f0
(below: ) show
12.5 332.2 moveto
12 f0
(1.) show
28 332.2 moveto
12 f0
(Server-side document processing) show
187.2 332.2 moveto
12 f0
( ) show
12.5 318.9 moveto
12 f0
(2.) show
28 318.9 moveto
12 f0
(Flexible server configuration) show
167.3 318.9 moveto
12 f0
( ) show
12.5 305.6 moveto
12 f0
(3.) show
28 305.6 moveto
12 f0
(Agents and event-based processing) show
196.9 305.6 moveto
12 f0
( ) show
0 276.7 moveto
14 f1
(2.1:) show
22.1 276.7 moveto
14 f1
( ) show
25.6 276.7 moveto
14 f1
(The PIA's Document-Processing System) show
0 249.7 moveto
12 f0
(The PIA's server-side document processing system \(DPS\) is essentially a form of extensible server) show
0 236.4 moveto
12 f0
(pages, with three main differences from other systems. ) show
12.5 209.8 moveto
12 f0
(1.) show
28 209.8 moveto
12 f0
(The syntax of the extensions is ) show
180.1 209.8 moveto
12 f2
(pure) show
202 209.8 moveto
12 f0
( XML or HTML -- there are no constructs like assignment) show
28 196.5 moveto
12 f0
(statements or arithmetic expressions. This means that documents can be created, edited, and) show
28 183.2 moveto
12 f0
(processed using existing tools. It also means that the PIA's processing feels more like document) show
28 169.9 moveto
12 f0
(processing and formatting than like programming. ) show
12.5 156.6 moveto
12 f0
(2.) show
28.2 156.6 moveto
12 f2
(None) show
53.5 156.6 moveto
12 f0
( of the tags in a PIA document has a fixed meaning. This allows the PIA to, for example, take) show
28 143.3 moveto
12 f2
(ordinary) show
69.9 143.3 moveto
12 f0
( HTML documents and apply ``styles'' or other processing to them. The processing) show
28 130 moveto
12 f0
(instructions -- the semantics -- of the tags are usually specified in a separate document which we) show
28 116.7 moveto
12 f0
(call a ) show
56.6 116.7 moveto
12 f2
(tagset) show
85.4 116.7 moveto
12 f0
( \(itself an XML document\). The configuration files associate particular classes of) show
28 103.4 moveto
12 f0
(documents with particular tagsets \(can also be done dynamically\). Of course, tag definitions and) show
28 90.1 moveto
12 f0
(processing instructions can also be embedded directly in a document. ) show
12.5 76.8 moveto
12 f0
(3.) show
28 76.8 moveto
12 f0
(The PIA's document processing deals with ) show
238.1 76.8 moveto
12 f2
(parse trees) show
291 76.8 moveto
12 f0
(, not strings \(text\). Every syntactically) show
pagelevel restore
showpage
%%Page: 10 10
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(correct document can be represented by a ``tree structure'' in which every start tag has a matching) show
28 695.9 moveto
12 f0
(end tag, all start and end tags are properly nested, and so on. Getting this structure correct is easy) show
28 682.6 moveto
12 f0
(to do in a WYSIWYG HTML or XML editor, but not in most programming languages -- in) show
28 669.3 moveto
12 f0
(particular it's perfectly feasible for any of the other systems to send an incorrect page to the) show
28 656 moveto
12 f0
(browser, which may then do unpredictable things with it. This can't happen in the PIA. ) show
0 629.4 moveto
12 f0
(Let's examine some of the consequences of these features in more detail: ) show
18.1 606.4 moveto
3.3 3.3 c  fill 
28 602.3 moveto
12 f1
(XML-based processing.) show
149.3 602.3 moveto
12 f0
( ) show
28 575.7 moveto
12 f0
(The PIA is XML ``all the way down'' -- there are no other programming constructs that have to be) show
28 562.4 moveto
12 f0
(learned. This means that existing XML and HTML editing tools can be used, and will be able to) show
28 549.1 moveto
12 f2
(help) show
48.6 549.1 moveto
12 f0
( an author deal with the extensions rather than getting in the way or, worse, rejecting the) show
28 535.8 moveto
12 f0
(extensions because they don't follow correct XML syntax. ) show
28 509.2 moveto
12 f0
(Moreover, the PIA's document processing ) show
234.6 509.2 moveto
12 f2
(uses) show
255.2 509.2 moveto
12 f0
( the nested tag structure of documents, rather than) show
28 495.9 moveto
12 f0
(ignoring it. It is impossible for the PIA to create a syntacally incorrect document. Also, XML can) show
28 482.6 moveto
12 f0
(be used for its intended purpose as structured data: the PIA's tags include powerful data extraction) show
28 469.3 moveto
12 f0
(and tree transformation operations. ) show
28 442.7 moveto
12 f0
(The end result is that all of a web application's data can be kept in the form of XML files, if) show
28 429.4 moveto
12 f0
(desired. And because XML can be embedded directly in ordinary HTML pages, there is no) show
28 416.1 moveto
12 f0
(artificial barrier between information and processing: a single document can include both, ) show
462.9 416.1 moveto
12 f2
(with the) show
28 402.8 moveto
12 f2
(same syntax) show
86.3 402.8 moveto
12 f0
( in the same familiar markup-language style. ) show
18.1 379.8 moveto
3.3 3.3 c  fill 
28 375.7 moveto
12 f1
(Dynamic tagsets.) show
114.6 375.7 moveto
12 f0
( ) show
28 349.1 moveto
12 f0
(A ) show
39.6 349.1 moveto
12 f2
(tagset) show
68.4 349.1 moveto
12 f0
( is an XML document that assigns meanings to tags. In most cases, these meanings are) show
28 335.8 moveto
12 f0
(similar to ``macros:'' they simply specify a piece of text \(and tags, of course\) that replaces the) show
28 322.5 moveto
12 f0
(defined tag. Tagsets allow the designer to collect all of an application's special-purpose tags in a) show
28 309.2 moveto
12 f0
(single document; imposing a uniform style by ``cut-and-paste'' becomes a thing of the past. ) show
28 282.6 moveto
12 f0
(A small number of tags are pre-defined as ``primitives.'' They define a Turing-complete scripting) show
28 269.3 moveto
12 f0
(language on which a user can build complete applications. ) show
28 242.7 moveto
12 f0
(Several pre-defined extensions of the basic tagset are provided, for applications that include) show
28 229.4 moveto
12 f0
(document formatting, calendaring, office form processing, and web site content management.) show
28 216.1 moveto
12 f0
(Tagsets provide applications with a domain-specific vocabulary for document structuring and) show
28 202.8 moveto
12 f0
(processing. ) show
28 176.2 moveto
12 f0
(Because the tagset is separate from the document being processed, it is possible to process the) show
28 162.9 moveto
12 f2
(same) show
52.6 162.9 moveto
12 f0
( document in different ways. This can be as simple as changing the appearance of a) show
28 149.6 moveto
12 f0
(document's page headers and footers in different parts of a web site, or as complex as a site) show
28 136.3 moveto
12 f0
(indexing package. ) show
28 109.7 moveto
12 f0
(It is also possible to obtain documents from ) show
240.6 109.7 moveto
12 f2
(other) show
266.2 109.7 moveto
12 f0
( sites and process them to obtain information.) show
28 96.4 moveto
12 f0
(For example, a workgroup site might display the current price of the parent company's stock. A) show
28 83.1 moveto
12 f0
(personal productivity application might download and merge e-mail from multiple web-based mail) show
pagelevel restore
showpage
%%Page: 11 11
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(sites. ) show
28 682.6 moveto
12 f0
(Many web sites and applications use specialized XML documents for transferring information; it) show
28 669.3 moveto
12 f0
(is easy to process these using a special-purpose tagset. ) show
28 642.7 moveto
12 f0
(Tags have also been designed that allow HTML documents to be ``updated in place'' in response) show
28 629.4 moveto
12 f0
(to user input. This technique is especially useful for discussion forums, as well as in certain kinds) show
28 616.1 moveto
12 f0
(of form-based applications. ) show
18.1 593.1 moveto
3.3 3.3 c  fill 
28 589 moveto
12 f1
(Entities and Namespaces) show
155.3 589 moveto
12 f0
( ) show
28 562.4 moveto
12 f0
(XML defines a construct called an ``entity'' \(the familiar ) show
305.5 562.4 moveto
10 f4
(&) show
311.5 562.4 moveto
12 f0
( construct for coding an ampersand in) show
28 549.1 moveto
12 f0
(HTML is one example\) that allows arbitrary text to be effectively ``included'' in a document. The) show
28 535.8 moveto
12 f0
(text of an entity can be defined as part of a document type declaration, or it can be specified as) show
28 522.5 moveto
12 f0
(coming from a file or even an arbitrary URL. ) show
28 495.9 moveto
12 f0
(The PIA permits entities to be treated the way other programming languages treat ``variables'' --) show
28 482.6 moveto
12 f0
(they can be written into as well as inserted, and so can change dynamically while a document is) show
28 469.3 moveto
12 f0
(being processed. Entities that reside in files provide a simple mechanism for making data) show
28 456 moveto
12 f0
(``persistant'' and for sharing data among the documents that make up an application. ) show
28 429.4 moveto
12 f0
(The PIA also extends XML's notion of ``namespaces'' to impose a directory-like hierarchical) show
28 416.1 moveto
12 f0
(structure on entities. This gives rise to entity names like ``) show
306.9 416.1 moveto
10 f4
(&FORM:inputVar;) show
396.9 416.1 moveto
12 f0
('' and) show
28 402.8 moveto
12 f0
(``) show
35.9 402.8 moveto
10 f4
(/Samples/TagsetDemo/test2.xh) show
203.9 402.8 moveto
12 f0
('' -- the value of the ``inputVar'' variable submitted as part of) show
28 389.5 moveto
12 f0
(a form, and the path ) show
129 389.5 moveto
12 f2
(from) show
151.6 389.5 moveto
12 f0
( the server's URL to the document itself. ) show
18.1 366.5 moveto
3.3 3.3 c  fill 
28 362.4 moveto
12 f1
(Security) show
70.6 362.4 moveto
12 f0
( ) show
28 335.8 moveto
12 f0
(The tags available for use while processing a document are limited to those provided by the tagset.) show
28 322.5 moveto
12 f0
(Although the PIA's tags include operations for accessing other web sites, for reading and writing) show
28 309.2 moveto
12 f0
(files, and for controlling the application, it is easy to ) show
281.9 309.2 moveto
12 f2
(remove) show
317.2 309.2 moveto
12 f0
( any subset of these tags before) show
28 295.9 moveto
12 f0
(processing a document that might be ``suspect'' in any way \(for example, when processing a) show
28 282.6 moveto
12 f0
(document from foreign site or an incoming e-mail message\). ) show
28 256 moveto
12 f0
(Of course, since a PIA-based application is a web server, it is also possible to use standard web) show
28 242.7 moveto
12 f0
(authentication techniques such as passwords. The PIA's tags also include operations for) show
28 229.4 moveto
12 f0
(computing and verifying digital signatures. ) show
28 202.8 moveto
12 f0
(The ability of the application designer to specify exactly what set of operations an active document) show
28 189.5 moveto
12 f0
(can perform makes it possible to be much more secure than a system in which arbitrary code can) show
28 176.2 moveto
12 f0
(be embedded in a document, or \(horrors!\) even downloaded on request \(as applets and ActiveX) show
28 162.9 moveto
12 f0
(controls are on the browser side\). ) show
28 136.3 moveto
12 f0
(Because the exensions in a document are XML, and hence visible as part of the document's) show
28 123 moveto
12 f0
(structure, it is also possible to ``audit'' a document, or even an entire new application, to ensure) show
28 109.7 moveto
12 f0
(that it does nothing unsafe or unexpected. Naturally, this can easily be done by means of a tagset. ) show
0 83.1 moveto
12 f0
(The operation of the PIA's document-processing system is described further in a companion White) show
pagelevel restore
showpage
%%Page: 12 12
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(Paper, ) show
33.3 709.2 moveto
12 f0
(Document Processing in the PIA) show
190.6 709.2 moveto
12 f0
(. The PIA's documentation can be found online at) show
0 695.9 moveto
12 f0
(www.RiSource.org/PIA/Doc) show
138.6 695.9 moveto
12 f0
(. There are several features of the PIA, including its flow-through) show
0 682.6 moveto
12 f0
(architecture and its use of open API's, that are of interest for other areas besides customizable Web) show
0 669.3 moveto
12 f0
(applications. ) show
0 640.4 moveto
14 f1
(2.2:) show
22.1 640.4 moveto
14 f1
( ) show
25.6 640.4 moveto
14 f1
(Flexible site configuration) show
0 613.4 moveto
12 f0
(Like most web servers, the PIA has a configuration file in which all of its many options and parameters) show
0 600.1 moveto
12 f0
(can be specified. Also like most servers, additional configuration files can be supplied in any directory) show
0 586.8 moveto
12 f0
(to supply ) show
47.3 586.8 moveto
12 f2
(local) show
71.3 586.8 moveto
12 f0
( options. ) show
0 560.2 moveto
12 f0
(Unlike other servers, however, the PIA's configuration files are pure XML \(which should come as no) show
0 546.9 moveto
12 f0
(surprise\), and any of the standard document-processing tags can be used in them. In particular, the) show
0 533.6 moveto
10 f4
(<include>) show
54 533.6 moveto
12 f0
( tag can be used to include other files \(for example, the standard mappings for filename) show
0 520.3 moveto
12 f0
(extensions\), and the ) show
98.6 520.3 moveto
10 f4
(<if>) show
122.6 520.3 moveto
12 f0
( tag can be used to make parts of the configuration optional \(for example,) show
0 507 moveto
12 f0
(setting up authorization only if a password file can be found\). ) show
0 480.4 moveto
12 f0
(Three aspects of the site configuration mechanism are particularly interesting: ) show
12.5 453.3 moveto
12 f0
(1.) show
28 453.3 moveto
12 f1
(Shadow Directories) show
128.3 453.3 moveto
12 f0
( ) show
28 426.7 moveto
12 f0
(The PIA has a mechanism that allows two directories to be ``overlaid'' on top of one another. The) show
28 413.4 moveto
12 f0
(one ``on top'' is the ) show
126.3 413.4 moveto
12 f2
(real) show
145.6 413.4 moveto
12 f0
( directory, and any files the PIA ) show
302.2 413.4 moveto
12 f2
(writes) show
331.5 413.4 moveto
12 f0
( go into it. The one ``underneath'') show
28 400.1 moveto
12 f0
(is called the ) show
88.3 400.1 moveto
12 f2
(virtual) show
120.3 400.1 moveto
12 f0
( directory, and the PIA looks there for any file it can't find in the real one. ) show
28 373.5 moveto
12 f0
(Although this seems confusing at first, it makes local customization ) show
356.3 373.5 moveto
12 f2
(enormously) show
412.2 373.5 moveto
12 f0
( easier. For one) show
28 360.2 moveto
12 f0
(thing, it gives greatly increased protection to the PIA's own files, and to an application's) show
28 346.9 moveto
12 f0
(documents. Usually an application is shipped with a configuration file that puts all of its) show
28 333.6 moveto
12 f0
(documents in a virtual directory. Any local ) show
237.3 333.6 moveto
12 f2
(customizations) show
308.6 333.6 moveto
12 f0
( then go into the real directory. The) show
28 320.3 moveto
12 f0
(virtual directory might even be on a CD-ROM, or in some location shared by many users, each) show
28 307 moveto
12 f0
(with their own real directory full of personal data and customizations. ) show
12.5 279.9 moveto
12 f0
(2.) show
28 279.9 moveto
12 f1
(Virtual Documents) show
125.6 279.9 moveto
12 f0
( ) show
28 253.3 moveto
12 f0
(The same configuration mechanism that allows for shadow directories can also be used to make) show
28 240 moveto
12 f0
(``virtual documents'' appear in a directory. The main use of this is to create ``aliases'' or) show
28 226.7 moveto
12 f0
(``symbolic links'' in an OS-independent way: the virtual document or directory can be brought in) show
28 213.4 moveto
12 f0
(from anyplace on the system. ) show
12.5 186.3 moveto
12 f0
(3.) show
28 186.3 moveto
12 f1
(Extension Mappings) show
133 186.3 moveto
12 f0
( ) show
28 159.7 moveto
12 f0
(The configuration file also defines the mapping between filename extensions and both MIME) show
28 146.4 moveto
12 f0
(types and tagsets. It is also possible to ) show
213.6 146.4 moveto
12 f2
(hide) show
234.2 146.4 moveto
12 f0
( files from the client; hidden files can still be accessed) show
28 133.1 moveto
12 f0
(from inside the applicaton. ) show
28 106.5 moveto
12 f0
(The extension mapping also defines a ``search order'' -- a URL without an extension causes the) show
28 93.2 moveto
12 f0
(PIA to try each of the listed extensions in order until a document is found. Among other) show
28 79.9 moveto
12 f0
(advantages, this means that document names in URL's don't need extensions, making them) show
pagelevel restore
showpage
%%Page: 13 13
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(shorter and easier to type and remember. ) show
28 682.6 moveto
12 f0
(A further advantage of omitting extensions is that a document's extension, and hence the tagset) show
28 669.3 moveto
12 f0
(that processes it, can be changed at any time by the application designer without invalidating a) show
28 656 moveto
12 f0
(user's bookmarks. ) show
0 627.1 moveto
14 f1
(2.3:) show
22.1 627.1 moveto
14 f1
( ) show
25.6 627.1 moveto
14 f1
(Agents and event based processes) show
0 600.1 moveto
12 f0
(The PIA also serves as a platform for running software ) show
266.6 600.1 moveto
12 f2
(agents) show
297.9 600.1 moveto
12 f0
(. These are small XML documents that) show
0 586.8 moveto
12 f0
(specify actions to be performed in response to ) show
223.9 586.8 moveto
12 f2
(events) show
253.8 586.8 moveto
12 f0
( rather than specific client requests. In this role the) show
0 573.5 moveto
12 f0
(PIA is sometimes referred to in its documentation as an ``agency.'' ) show
0 546.9 moveto
12 f0
(There are several uses for agents, corresponding to different kinds of events that activate them. ) show
18.1 523.9 moveto
3.3 3.3 c  fill 
28 519.8 moveto
12 f1
(Chronological agents) show
136.3 519.8 moveto
12 f0
( ) show
28 493.2 moveto
12 f0
(These are activated at a particular time, or repeated at a particular interval. For example, one can) show
28 479.9 moveto
12 f0
(specify that a particular agent is supposed to run daily at 1am, or every hour on the half-hour. This) show
28 466.6 moveto
12 f0
(kind of agent is similar to a ``) show
170.3 466.6 moveto
10 f4
(cron) show
194.3 466.6 moveto
12 f0
( job'' or ``) show
244.6 466.6 moveto
10 f4
(at) show
256.6 466.6 moveto
12 f0
( job'' in Unix; they can be used for reminders,) show
28 453.3 moveto
12 f0
(periodic updates, cache management, and so on. ) show
18.1 430.3 moveto
3.3 3.3 c  fill 
28 426.2 moveto
12 f1
(Transaction agents) show
125.6 426.2 moveto
12 f0
( ) show
28 399.6 moveto
12 f0
(Transaction agents are activated by specified features of web requests or responses. They can then) show
28 386.3 moveto
12 f0
(operate on the transaction and, for responses, on the document itself before it gets to the client.) show
28 373 moveto
12 f0
(One of the earliest uses of a transaction agent was one that maintains a permanent browsing) show
28 359.7 moveto
12 f0
(history. A closely related one puts a small ``toolbar'' at the front of every HTML page requested) show
28 346.4 moveto
12 f0
(using the PIA as a proxy. A more recent application was an ``ad-buster'' agent that recognizes) show
28 333.1 moveto
12 f0
(requests to banner-ad sites and redirects them. ) show
28 306.5 moveto
12 f0
(Some of the things that can be done with transaction agents resemble other innovative proxy-based) show
28 293.2 moveto
12 f0
(web applications, for example IBM's WBI, or with specialized web caching software. ) show
18.1 270.2 moveto
3.3 3.3 c  fill 
28 266.1 moveto
12 f1
(Marker agents) show
103.6 266.1 moveto
12 f0
( ) show
28 239.5 moveto
12 f0
(Marker agents don't really respond to ) show
211.9 239.5 moveto
12 f2
(any) show
229.2 239.5 moveto
12 f0
( events, they just ``bookmark'' their ``home URL,'') show
28 226.2 moveto
12 f0
(which is typically an application. This gives the user a ``short cut'' URL for that application, for) show
28 212.9 moveto
12 f0
(example ``) show
79.6 212.9 moveto
10 f4
(/~Calendar) show
133.6 212.9 moveto
12 f0
('' instead of the more verbose ``) show
288.2 212.9 moveto
10 f4
(/Agents/SimpleCalendar) show
420.2 212.9 moveto
12 f0
(''. The use of a) show
28 199.6 moveto
12 f0
(tilde on the agent's name is meant to resemble the common convention of using a tilde in the URL) show
28 186.3 moveto
12 f0
(for a user's home directory on Apache and similar web servers. In some cases, marker agents) show
28 173 moveto
12 f0
(might be set up for ) show
121.6 173 moveto
12 f2
(real) show
140.9 173 moveto
12 f0
( users on a group site. ) show
201 149.1 moveto
10 f4
(table of contents) show
0 140.1 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 103.2 moveto
18 f1
(3:) show
14.9 103.2 moveto
18 f1
( ) show
19.4 103.2 moveto
18 f1
(Comparison with Other Systems) show
0 75.3 moveto
12 f0
(In this section we will compare the PIA's approach to constructing web applications to that of other) show
pagelevel restore
showpage
%%Page: 14 14
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(systems currently in use. ) show
0 680.3 moveto
14 f1
(3.1:) show
22.1 680.3 moveto
14 f1
( Conventional platforms) show
0 653.3 moveto
12 f0
(The conventional platforms for web applications break down into two broad categories: separate code,) show
0 640 moveto
12 f0
(and embedded code: ) show
12.5 612.9 moveto
12 f0
(1.) show
28 612.9 moveto
12 f1
(Separate code) show
28 599.6 moveto
12 f0
(Systems that separate code from include CGI scripts, Apache modules, Java servlets, and so on.) show
28 586.3 moveto
12 f0
(All require considerable programming skills in order to change or customize the behavior) show
28 573 moveto
12 f0
(associated with an application's document. All have the additional disadvantage that, because code) show
28 559.7 moveto
12 f0
(and data are in separate files, it is easy for changes in a document to ``break'' the associated code.) show
28 546.4 moveto
12 f0
(Modules and servlets also pose the risk of a bug in the code causing a server crash. ) show
12.5 519.3 moveto
12 f0
(2.) show
28 519.3 moveto
12 f1
(Embedded code) show
28 506 moveto
12 f0
(Systems that embed code in documents include ASP \(Visual Basic\) and JSP \(Java\); similar) show
28 492.7 moveto
12 f0
(systems exist for embedding other languages, including shell scripts \(Apache server-side) show
28 479.4 moveto
12 f0
(includes\), Perl and Python. All still require a certain level of programming skill, with at least) show
28 466.1 moveto
12 f0
(passing familiarity with a programming or scripting language and its syntax. Editing tools) show
28 452.8 moveto
12 f0
(designed for HTML and XML give little or no assistance when editing the embedded scripts. ) show
0 426.2 moveto
12 f0
(It is difficult, using embedded languages, to perform processing on arbitrary documents. It is almost) show
0 412.9 moveto
12 f0
(impossible to use them to define new tags, or new meanings for old tags. ) show
0 384 moveto
14 f1
(3.2:) show
22.1 384 moveto
14 f1
( Server-side extension languages) show
0 357 moveto
12 f0
(Server-side extension languages are complete programming languages that are designed to generate web) show
0 343.7 moveto
12 f0
(pages; in general ordinary text and HTML tags are treated as ``constants'' and passed through to the) show
0 330.4 moveto
12 f0
(client. The PIA falls squarely in this category, but with some significant differences which we will) show
0 317.1 moveto
12 f0
(examine in more detail below. For the moment, let's compare the PIA to two well-known server-side) show
0 303.8 moveto
12 f0
(languages, Meta-HTML and PHP. ) show
18.1 280.8 moveto
3.3 3.3 c  fill 
28 276.7 moveto
12 f1
(Meta-HTML) show
28 263.4 moveto
12 f0
(is similar in spirit to the PIA's language, and looks very similar at first glance. It can be thought of) show
28 250.1 moveto
12 f0
(as a ``LISP-like'' programming language that uses angle brackets instead of parentheses. The) show
28 236.8 moveto
12 f0
(problem with this approach is that, because angle-bracketed constructs can be nested \(including) show
28 223.5 moveto
12 f0
(inside of regular tags and attributes\), Meta-HTML pages do not adhere to XML or HTML syntax,) show
28 210.2 moveto
12 f0
(and so cannot be edited by standard tools. It ) show
241.9 210.2 moveto
12 f2
(is) show
249.9 210.2 moveto
12 f0
( possible to use Meta-HTML to define new tags and) show
28 196.9 moveto
12 f0
(embed them in regular HTML. ) show
18.1 173.9 moveto
3.3 3.3 c  fill 
28 169.8 moveto
12 f1
(PHP) show
28 156.5 moveto
12 f0
(is actually an ``embedded code'' approach. PHP scripts, written in a language that somewhat) show
28 143.2 moveto
12 f0
(resembles Perl, are enclosed in ) show
179.2 143.2 moveto
10 f4
(<?php ... ?>) show
251.2 143.2 moveto
12 f0
( brackets that make them look like XML) show
28 129.9 moveto
12 f0
(``processing instructions.'' \(Other bracketing methods exist, but this is the most) show
28 116.6 moveto
12 f0
(``XML-friendly.''\) PHP, then, has all the usual disadvantages of embedded code with respect to) show
28 103.3 moveto
12 f0
(editing tools, but at least the embedded constructs are designed so that they can be properly) show
28 90 moveto
12 f0
(ignored or passed through by XML tools. It would not be difficult for PHP and the PIA to co-exist;) show
28 76.7 moveto
12 f0
(for example, PHP could be used inside of tagsets, or an application could consist of a mixture of) show
pagelevel restore
showpage
%%Page: 15 15
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(XML and PHP documents. ) show
gsave 2.1 setlinewidth
 100.2 693.3 moveto
303.5 0 rlineto 0 -127.6 rlineto -303.5 0 rlineto closepath  stroke 
grestore
gsave 0.7 setlinewidth
 103.7 689.8 moveto
129.5 0 rlineto 0 -18 rlineto -129.5 0 rlineto closepath  stroke 
grestore
148.5 676.5 moveto
12 f1
(Feature) show
gsave 0.7 setlinewidth
 234.6 689.8 moveto
71.5 0 rlineto 0 -18 rlineto -71.5 0 rlineto closepath  stroke 
grestore
236.7 676.5 moveto
12 f1
(Meta-HTML) show
gsave 0.7 setlinewidth
 307.5 689.8 moveto
36.2 0 rlineto 0 -18 rlineto -36.2 0 rlineto closepath  stroke 
grestore
310.6 676.5 moveto
12 f1
(PHP3) show
gsave 0.7 setlinewidth
 345.1 689.8 moveto
55.1 0 rlineto 0 -18 rlineto -55.1 0 rlineto closepath  stroke 
grestore
362.3 676.5 moveto
12 f1
(PIA) show
gsave 0.7 setlinewidth
 103.7 670.4 moveto
129.5 0 rlineto 0 -18 rlineto -129.5 0 rlineto closepath  stroke 
grestore
105.8 657.1 moveto
12 f1
(Syntax) show
gsave 0.7 setlinewidth
 234.6 670.4 moveto
71.5 0 rlineto 0 -18 rlineto -71.5 0 rlineto closepath  stroke 
grestore
236.7 657.4 moveto
12 f0
(HTML-like) show
gsave 0.7 setlinewidth
 307.5 670.4 moveto
36.2 0 rlineto 0 -18 rlineto -36.2 0 rlineto closepath  stroke 
grestore
309.6 657.4 moveto
12 f0
(C-like) show
gsave 0.7 setlinewidth
 345.1 670.4 moveto
55.1 0 rlineto 0 -18 rlineto -55.1 0 rlineto closepath  stroke 
grestore
347.2 657.4 moveto
12 f0
(pure XML) show
gsave 0.7 setlinewidth
 103.7 651 moveto
129.5 0 rlineto 0 -18 rlineto -129.5 0 rlineto closepath  stroke 
grestore
105.8 637.7 moveto
12 f1
(Embedded processing) show
gsave 0.7 setlinewidth
 234.6 651 moveto
71.5 0 rlineto 0 -18 rlineto -71.5 0 rlineto closepath  stroke 
grestore
236.7 638 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 307.5 651 moveto
36.2 0 rlineto 0 -18 rlineto -36.2 0 rlineto closepath  stroke 
grestore
309.6 638 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 345.1 651 moveto
55.1 0 rlineto 0 -18 rlineto -55.1 0 rlineto closepath  stroke 
grestore
347.2 638 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 103.7 631.6 moveto
129.5 0 rlineto 0 -18 rlineto -129.5 0 rlineto closepath  stroke 
grestore
105.8 618.3 moveto
12 f1
(Tagsets) show
gsave 0.7 setlinewidth
 234.6 631.6 moveto
71.5 0 rlineto 0 -18 rlineto -71.5 0 rlineto closepath  stroke 
grestore
236.7 618.6 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 307.5 631.6 moveto
36.2 0 rlineto 0 -18 rlineto -36.2 0 rlineto closepath  stroke 
grestore
309.6 618.6 moveto
12 f0
(no) show
gsave 0.7 setlinewidth
 345.1 631.6 moveto
55.1 0 rlineto 0 -18 rlineto -55.1 0 rlineto closepath  stroke 
grestore
347.2 618.6 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 103.7 612.2 moveto
129.5 0 rlineto 0 -18 rlineto -129.5 0 rlineto closepath  stroke 
grestore
105.8 598.9 moveto
12 f1
(redefine document tags?) show
gsave 0.7 setlinewidth
 234.6 612.2 moveto
71.5 0 rlineto 0 -18 rlineto -71.5 0 rlineto closepath  stroke 
grestore
236.7 599.2 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 307.5 612.2 moveto
36.2 0 rlineto 0 -18 rlineto -36.2 0 rlineto closepath  stroke 
grestore
309.6 599.2 moveto
12 f0
(no) show
gsave 0.7 setlinewidth
 345.1 612.2 moveto
55.1 0 rlineto 0 -18 rlineto -55.1 0 rlineto closepath  stroke 
grestore
347.2 599.2 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 103.7 592.8 moveto
129.5 0 rlineto 0 -18 rlineto -129.5 0 rlineto closepath  stroke 
grestore
105.8 579.5 moveto
12 f1
(treats documents as:) show
gsave 0.7 setlinewidth
 234.6 592.8 moveto
71.5 0 rlineto 0 -18 rlineto -71.5 0 rlineto closepath  stroke 
grestore
236.7 579.8 moveto
12 f0
(strings) show
gsave 0.7 setlinewidth
 307.5 592.8 moveto
36.2 0 rlineto 0 -18 rlineto -36.2 0 rlineto closepath  stroke 
grestore
309.6 579.8 moveto
12 f0
(strings) show
gsave 0.7 setlinewidth
 345.1 592.8 moveto
55.1 0 rlineto 0 -18 rlineto -55.1 0 rlineto closepath  stroke 
grestore
347.2 579.8 moveto
12 f0
(parse trees) show
0 541.7 moveto
12 f0
(Neither Meta-HTML nor PHP, nor any other server-side scripting system that we know of, shows any) show
0 528.4 moveto
12 f0
(awareness of the structure of the underlying document. The document is simply treated as a ``character) show
0 515.1 moveto
12 f0
(string;'' it is possible to generate syntactically incorrect documents, and it is not particularly easy to) show
0 501.8 moveto
12 f0
(manipulate the document's parse tree. This makes it difficult to take advantage of the document's) show
0 488.5 moveto
12 f0
(structure. \(Of course, XSL does explicitly manipulate the documents structure but it does not provide the) show
0 475.2 moveto
12 f0
(traditional scripting capabilities.\) ) show
0 448.6 moveto
12 f0
(Note the latest version of PHP ) show
148.6 448.6 moveto
12 f2
(does) show
170.5 448.6 moveto
12 f0
( include an XML parser, which can be used for processing) show
0 435.3 moveto
12 f0
(documents, but it can't handle ordinary HTML. Unlike Meta-HTML, PHP lacks the notion of tagsets. ) show
0 406.4 moveto
14 f1
(3.3:) show
22.1 406.4 moveto
14 f1
( XML-based approaches) show
0 379.4 moveto
12 f0
(The available XML-based approaches to server-side document processing fall into two broad categories:) show
0 366.1 moveto
12 f0
(embedded code inside of XML constructs \(like PHP\), and ``style-sheet'' languages. As we will see, the) show
0 352.8 moveto
12 f0
(PIA, which is ) show
68.6 352.8 moveto
12 f2
(also) show
88.6 352.8 moveto
12 f0
( XML-based, has aspects of both. ) show
18.1 329.8 moveto
3.3 3.3 c  fill 
28 325.7 moveto
12 f1
(XSL) show
28 312.4 moveto
12 f0
(is essentially a translation of a subset of the W3C's ``cascading style sheet'' language into XML.) show
28 299.1 moveto
12 f0
(An XSL style sheet is a set of rules that can be applied to a document to transform it, usually for) show
28 285.8 moveto
12 f0
(presentation. Unfortunately XSL is not a complete language, and it cannot be embedded in a) show
28 272.5 moveto
12 f0
(document -- it is applied from the ``outside'' like processing with a tagset. ) show
18.1 249.5 moveto
3.3 3.3 c  fill 
28 245.4 moveto
12 f1
(DSSSL) show
28 232.1 moveto
12 f0
(is an older standard for processing SGML documents. Unlike XSL, it ) show
364.2 232.1 moveto
12 f2
(is) show
372.2 232.1 moveto
12 f0
( a complete programming) show
28 218.8 moveto
12 f0
(language, being based on a variant of Scheme. On the other hand, it does ) show
380.9 218.8 moveto
12 f2
(not) show
396.4 218.8 moveto
12 f0
( have XML syntax,) show
28 205.5 moveto
12 f0
(and shares XSL's inability to be embedded in a document. It would probably be possible, though,) show
28 192.2 moveto
12 f0
(to ) show
40.3 192.2 moveto
12 f2
(implement) show
90.5 192.2 moveto
12 f0
( the PIA's tag language as a DSSSL style. ) show
0 165.6 moveto
12 f0
(The main disadvantage of the style-sheet languages is that they cannot be embedded in a document. In) show
0 152.3 moveto
12 f0
(addition, they tend to be difficult to learn, and cannot easily be manipulated as data. XSL, and the) show
0 139 moveto
12 f0
(closely related Cascading Style Sheets of HTML, are not complete programming languages. We feel) show
0 125.7 moveto
12 f0
(that ) show
20.9 125.7 moveto
12 f2
(both) show
42.2 125.7 moveto
12 f0
( expressive power and embeddability are important. It's worth noting, though, that style-sheet) show
0 112.4 moveto
12 f0
(processing could easily be added to the PIA's document processor. ) show
pagelevel restore
showpage
%%Page: 16 16
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
gsave 2.1 setlinewidth
 24.9 719.9 moveto
454.2 0 rlineto 0 -335.4 rlineto -454.2 0 rlineto closepath  stroke 
grestore
gsave 0.7 setlinewidth
 28.4 716.4 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
67.7 703.1 moveto
12 f1
(Feature) show
gsave 0.7 setlinewidth
 148.3 716.4 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
220.2 703.1 moveto
12 f1
(XSL) show
gsave 0.7 setlinewidth
 316.8 716.4 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
385.9 703.1 moveto
12 f1
(PIA) show
gsave 0.7 setlinewidth
 28.4 697 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 683.7 moveto
12 f1
(local transformations) show
gsave 0.7 setlinewidth
 148.3 697 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 684 moveto
12 f0
(no: assumes a complete parse tree) show
gsave 0.7 setlinewidth
 316.8 697 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 684 moveto
12 f0
(yes: documents can be streamed) show
gsave 0.7 setlinewidth
 28.4 677.6 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 664.3 moveto
12 f1
(arithmetic operations) show
gsave 0.7 setlinewidth
 148.3 677.6 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 664.6 moveto
12 f0
(counters only) show
gsave 0.7 setlinewidth
 316.8 677.6 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 664.6 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 28.4 658.2 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 644.9 moveto
12 f1
(text manipulation) show
gsave 0.7 setlinewidth
 148.3 658.2 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 645.2 moveto
12 f0
(sorting and concatenation) show
gsave 0.7 setlinewidth
 316.8 658.2 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 645.2 moveto
12 f0
(sort, split, join, trim, subst) show
gsave 0.7 setlinewidth
 28.4 638.8 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 625.5 moveto
12 f1
(iteration) show
gsave 0.7 setlinewidth
 148.3 638.8 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 625.8 moveto
12 f0
(only over node sets) show
gsave 0.7 setlinewidth
 316.8 638.8 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 625.8 moveto
12 f0
(general) show
gsave 0.7 setlinewidth
 28.4 619.4 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 606.1 moveto
12 f1
(tests) show
gsave 0.7 setlinewidth
 148.3 619.4 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 606.4 moveto
12 f0
(tree matching) show
gsave 0.7 setlinewidth
 316.8 619.4 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 606.4 moveto
12 f0
(numeric, string) show
gsave 0.7 setlinewidth
 28.4 600 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 586.7 moveto
12 f1
(embedded expressions) show
gsave 0.7 setlinewidth
 148.3 600 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 588.3 moveto
10 f4
({) show
156.4 588.3 moveto
10 f6
(xpointer) show
204.7 588.3 moveto
10 f4
(}) show
gsave 0.7 setlinewidth
 316.8 600 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 588.3 moveto
10 f4
(&) show
324.9 588.3 moveto
10 f6
(entity) show
361.7 588.3 moveto
10 f4
(;) show
gsave 0.7 setlinewidth
 28.4 580.6 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 567.3 moveto
12 f1
(definitions) show
gsave 0.7 setlinewidth
 148.3 580.6 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 567.6 moveto
12 f0
(only in stylesheet) show
gsave 0.7 setlinewidth
 316.8 580.6 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 567.6 moveto
12 f0
(tagset or document) show
gsave 0.7 setlinewidth
 28.4 561.2 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 547.9 moveto
12 f1
(processing) show
gsave 0.7 setlinewidth
 148.3 561.2 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 548.2 moveto
12 f0
(only in stylesheet) show
gsave 0.7 setlinewidth
 316.8 561.2 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 548.2 moveto
12 f0
(tagset or document) show
gsave 0.7 setlinewidth
 28.4 541.8 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 528.5 moveto
12 f1
(native code extensions) show
gsave 0.7 setlinewidth
 148.3 541.8 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 528.8 moveto
12 f0
(no) show
gsave 0.7 setlinewidth
 316.8 541.8 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 528.8 moveto
12 f0
(yes, through tag handlers) show
gsave 0.7 setlinewidth
 28.4 522.4 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 509.1 moveto
12 f1
(interface to files) show
gsave 0.7 setlinewidth
 148.3 522.4 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 509.4 moveto
12 f0
(read-only) show
gsave 0.7 setlinewidth
 316.8 522.4 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 509.4 moveto
12 f0
(read/write) show
gsave 0.7 setlinewidth
 28.4 503 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 489.7 moveto
12 f1
(interface to web docs) show
gsave 0.7 setlinewidth
 148.3 503 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 490 moveto
12 f0
(read-only) show
gsave 0.7 setlinewidth
 316.8 503 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 490 moveto
12 f0
(read/write/query) show
gsave 0.7 setlinewidth
 28.4 483.6 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 470.3 moveto
12 f1
(interface to server) show
gsave 0.7 setlinewidth
 148.3 483.6 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 470.6 moveto
12 f0
(no: documents only) show
gsave 0.7 setlinewidth
 316.8 483.6 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 470.6 moveto
12 f0
(yes: can operate on transactions) show
gsave 0.7 setlinewidth
 28.4 464.2 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 450.9 moveto
12 f1
(interface to database) show
gsave 0.7 setlinewidth
 148.3 464.2 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 451.2 moveto
12 f0
(no) show
gsave 0.7 setlinewidth
 316.8 464.2 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 451.2 moveto
12 f0
(yes) show
gsave 0.7 setlinewidth
 28.4 444.8 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 431.5 moveto
12 f1
( ) show
gsave 0.7 setlinewidth
 148.3 444.8 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 431.8 moveto
12 f0
( ) show
gsave 0.7 setlinewidth
 316.8 444.8 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 431.8 moveto
12 f0
( ) show
gsave 0.7 setlinewidth
 28.4 425.4 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 412.1 moveto
12 f1
(Learnability) show
gsave 0.7 setlinewidth
 148.3 425.4 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 412.4 moveto
12 f0
(complex) show
gsave 0.7 setlinewidth
 316.8 425.4 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 412.4 moveto
12 f0
(simple) show
gsave 0.7 setlinewidth
 28.4 406 moveto
118.5 0 rlineto 0 -18 rlineto -118.5 0 rlineto closepath  stroke 
grestore
30.5 392.7 moveto
12 f1
(Security) show
gsave 0.7 setlinewidth
 148.3 406 moveto
167.1 0 rlineto 0 -18 rlineto -167.1 0 rlineto closepath  stroke 
grestore
150.4 393 moveto
12 f0
(N/A) show
gsave 0.7 setlinewidth
 316.8 406 moveto
158.8 0 rlineto 0 -18 rlineto -158.8 0 rlineto closepath  stroke 
grestore
318.9 393 moveto
12 f0
(flexible) show
201 363.2 moveto
10 f4
(table of contents) show
0 354.2 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 317.3 moveto
18 f1
(4:) show
14.9 317.3 moveto
18 f1
( ) show
19.4 317.3 moveto
18 f1
(Technical details) show
0 289.4 moveto
12 f0
(A full technical analysis of the PIA is beyond the scope of this paper. Here we mention a few of the) show
0 276.1 moveto
12 f0
(technical aspects of the PIA's implementation that have direct consequences for the designer of web) show
0 262.8 moveto
12 f0
(applications. ) show
0 233.9 moveto
14 f1
(4.1:) show
22.1 233.9 moveto
14 f1
( Performance and portability) show
28 206.9 moveto
12 f0
(Currently the PIA is highly portable, but fairly large and not particularly fast; this makes it) show
28 193.6 moveto
12 f0
(most suitable for personal and group applications. We are actively working on the size and) show
28 180.3 moveto
12 f0
(speed problems, with the ultimate goal of developing a much faster and smaller version that) show
28 167 moveto
12 f0
(can easily be integrated with Apache and other high-end web servers. ) show
0 140.4 moveto
12 f0
(The PIA is currently written in Java, which makes it highly portable; it is known to run under Sun's JDK) show
0 127.1 moveto
12 f0
(1.1 and 1.2 on Linux, Solaris, and Windows 98 and NT, as well as under Kaffe on Linux. Adding to the) show
0 113.8 moveto
12 f0
(PIA's portability is the fact that the user interface is completely web-based, avoiding Java's user) show
0 100.5 moveto
12 f0
(interface classes. ) show
pagelevel restore
showpage
%%Page: 17 17
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
0 709.2 moveto
12 f0
(Unfortunately, Java is an interpreted language, which imposes a performance penalty. There are several) show
0 695.9 moveto
12 f0
(factors in the PIA's design which partially compensate for this: ) show
18.1 673.4 moveto
3.3 3.3 c  fill 
28 669.3 moveto
12 f0
(The DPS ``processing engine'' does not build large data structures in memory. It is possible to) show
28 656 moveto
12 f0
(``stream through'' the parts of a document that do not need to be further processed. As a result, the) show
28 642.7 moveto
12 f0
(PIA's memory ``footprint'' is comparatively small, and it runs fairly quickly. ) show
18.1 633.5 moveto
3.3 3.3 c  fill 
28 629.4 moveto
12 f0
(XML and HTML are very efficient to parse: parsing can be done with a simple state machine,) show
28 616.1 moveto
12 f0
(avoiding recursion and backtracking. This can result in a significant time saving. ) show
18.1 606.9 moveto
3.3 3.3 c  fill 
28 602.8 moveto
12 f0
(The PIA's site configuration manager ``caches'' all site configuration information, including all) show
28 589.5 moveto
12 f0
(tagsets and shared entities, in memory. Since one of the most expensive operations on a web server) show
28 576.2 moveto
12 f0
(can be opening files and searching directories, this results in a considerable saving. ) show
18.1 567 moveto
3.3 3.3 c  fill 
28 562.9 moveto
12 f0
(Static pages, including plain HTML and images, need no processing, and can be passed through) show
28 549.6 moveto
12 f0
(the PIA untouched. It is also possible to use a different server, such as Apache, to invisibly serve) show
28 536.3 moveto
12 f0
(static pages. ) show
18.1 527.1 moveto
3.3 3.3 c  fill 
28 523 moveto
12 f0
(It is possible to run the PIA's document processor from a command line or ) show
389.9 523 moveto
10 f4
(makefile) show
437.9 523 moveto
12 f0
( to process) show
28 509.7 moveto
12 f0
(documents ``offline.'' Only the truly dynamic pages need to be processed by the server. ) show
0 483.1 moveto
12 f2
(In its present Java implementation) show
165.9 483.1 moveto
12 f0
(, the PIA is not well suited for large public websites or other) show
0 469.8 moveto
12 f0
(applications where extreme high performance is needed. At least, ) show
316.9 469.8 moveto
12 f2
(not yet.) show
352.2 469.8 moveto
12 f0
( There are three possible ways) show
0 456.5 moveto
12 f0
(of improving the PIA's performance dramatically: ) show
12.5 429.4 moveto
12 f0
(1.) show
28 429.4 moveto
12 f1
(Full compilation) show
28 416.1 moveto
12 f0
(Some Java compilers exist that can produce machine-language applications instead of interpreted) show
28 402.8 moveto
12 f0
(``byte codes.'' These have their limitations, but nothing would prevent using one to give the PIA) show
28 389.5 moveto
12 f0
(an immediate performance boost. ) show
12.5 362.4 moveto
12 f0
(2.) show
28 362.4 moveto
12 f1
(Conversion to C.) show
28 349.1 moveto
12 f0
(Because the PIA's document processing engine is based on a small number of primitive tags, it) show
28 335.8 moveto
12 f0
(would be quite simple to rewrite it in another programming language. C is the obvious choice: it is) show
28 322.5 moveto
12 f0
(universally available, easily interfaced with other web servers, and delivers very high) show
28 309.2 moveto
12 f0
(performance. \(See RiSource.org for status of the conversion effort.\) ) show
12.5 282.1 moveto
12 f0
(3.) show
28 282.1 moveto
12 f1
(Document format conversion.) show
28 268.8 moveto
12 f0
(Although XML is easy to parse, it's not completely trivial. The PIA imposes an additional step,) show
28 255.5 moveto
12 f0
(namely looking up the action associated with each tag. A ``pre-parsed'' binary document format) show
28 242.2 moveto
12 f0
(would eliminate this step, and possibly speed up text searches as well. The ultimate extension of) show
28 228.9 moveto
12 f0
(this, which has the potential to deliver the ) show
231.6 228.9 moveto
12 f2
(ultimate) show
270.9 228.9 moveto
12 f0
( in performance, would be to ) show
412.5 228.9 moveto
12 f2
(compile) show
450.4 228.9 moveto
12 f0
( pages into) show
28 215.6 moveto
12 f0
(C programs. Running such a program would perform any necessary processing, and send the) show
28 202.3 moveto
12 f0
(resulting page directly to an output stream. \(Note this is similar to the page compilation of PHP) show
28 189 moveto
12 f0
(4.0. Further investigation needs to be done to determine whether the significant features of the PIA) show
28 175.7 moveto
12 f0
(can be integrated with the PHP module.\) ) show
0 146.8 moveto
14 f1
(4.2:) show
22.1 146.8 moveto
14 f1
( Server integration) show
0 119.8 moveto
12 f0
(In order to integrate PIA-based applications into an existing web site, it is usually necessary to integrate) show
0 106.5 moveto
12 f0
(the PIA with the server that is already present. There are three ways of doing this: ) show
12.5 79.4 moveto
12 f0
(1.) show
28 79.4 moveto
12 f1
(Proxying) show
pagelevel restore
showpage
%%Page: 18 18
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(Apache has a technique for seamlessly integrating another web server into a website; this is done) show
28 695.9 moveto
12 f0
(by adding a single line to Apache's configuration file. Apache will invisibly proxy requests to) show
28 682.6 moveto
12 f0
(selected sub-directories to the other server. The PIA server can then be configured to run on a) show
28 669.3 moveto
12 f0
(different port from Apache's, but to report Apache's port to the browser when constructing a URL.) show
28 656 moveto
12 f0
(This technique allows portions of a website to be served by the PIA, and the rest by Apache. ) show
12.5 628.9 moveto
12 f0
(2.) show
28 628.9 moveto
12 f1
(Servlets) show
28 615.6 moveto
12 f0
(Java servlets are a common, standardized technique for including active documents into a web) show
28 602.3 moveto
12 f0
(server. Since the PIA is written in pure Java, it's easy to wrap a servlet interface around the PIA's) show
28 589 moveto
12 f0
(web-server engine. ) show
12.5 561.9 moveto
12 f0
(3.) show
28 561.9 moveto
12 f1
(Modules) show
28 548.6 moveto
12 f0
(Apache has an extremely powerful extension technique in which ``modules'' -- essentially shared) show
28 535.3 moveto
12 f0
(libraries with a standard interface -- are linked in with the main server. Many of Apache's standard) show
28 522 moveto
12 f0
(functions are already implemented in this form, as are several existing extension languages such as) show
28 508.7 moveto
12 f0
(PHP. By rewriting the PIA's document processing and site-structuring subsystems in C, it will be) show
28 495.4 moveto
12 f0
(possible to integrate the PIA into Apache as a module. When complete, this effort will give the) show
28 482.1 moveto
12 f0
(tightest integration and the highest performance. ) show
12.5 455 moveto
12 f0
(4.) show
28 455 moveto
12 f1
(Offline Processing) show
28 441.7 moveto
12 f0
(As we mentioned above under ``performance,'' it is possible to process documents outside of the) show
28 428.4 moveto
12 f0
(server environment. If a web site consists entirely of static pages, it is possible to use the PIA's) show
28 415.1 moveto
12 f0
(document processing purely as a formatter and have the existing server deliver the resulting static) show
28 401.8 moveto
12 f0
(pages. ) show
0 372.9 moveto
14 f1
(4.3:) show
22.1 372.9 moveto
14 f1
( Integration with other applications) show
0 345.9 moveto
12 f0
(It is just as easy to integrate the PIA with existing applications, web-based and otherwise, as it is to) show
0 332.6 moveto
12 f0
(integrate it with a web server. As usual, there are several ways of doing this: ) show
18.1 309.6 moveto
3.3 3.3 c  fill 
28 305.5 moveto
12 f1
(HTTP) show
28 292.2 moveto
12 f0
(Integrating the PIA with ) show
147.9 292.2 moveto
12 f2
(web-based) show
199.5 292.2 moveto
12 f0
( applications is trivial. Since the PIA has tags that allow it to) show
28 278.9 moveto
12 f0
(make HTTP requests, a PIA application can easily and seamlessly call on other web-based) show
28 265.6 moveto
12 f0
(applications or devices for services. ) show
18.1 242.6 moveto
3.3 3.3 c  fill 
28 238.5 moveto
12 f1
(Local programs and files) show
28 225.2 moveto
12 f0
(A mechanism exists for the PIA to run local programs, in any language, as CGI scripts. Since it) show
28 211.9 moveto
12 f0
(can also read and write files, it can prepare input and analyze output from local applications as) show
28 198.6 moveto
12 f0
(well. ) show
18.1 175.6 moveto
3.3 3.3 c  fill 
28 171.5 moveto
12 f1
(Custom primitive tags) show
28 158.2 moveto
12 f0
(It is easy for a programmer to write custom ``handlers'' for special-purpose tags, and add these to) show
28 144.9 moveto
12 f0
(a PIA application. Interfaces to special-purpose hardware and legacy databases have already been) show
28 131.6 moveto
12 f0
(developed in this form. The PIA's tags for date and time computation and for generating digital) show
28 118.3 moveto
12 f0
(signatures were originally custom handlers that later became part of the basic system. ) show
18.1 95.3 moveto
3.3 3.3 c  fill 
28 91.2 moveto
12 f1
(Standard API's) show
28 77.9 moveto
12 f0
(The PIA's document-processing subsystem uses standard API's, including the W3C's Document) show
pagelevel restore
showpage
%%Page: 19 19
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(Object Model \(DOM\) for representing documents as parse trees, and the Simple API for XML) show
28 695.9 moveto
12 f0
(\(SAX\) for communication between parsers and applications. SAX is particularly useful because) show
28 682.6 moveto
12 f0
(the DPS can be made to look like ) show
191.3 682.6 moveto
12 f2
(either) show
219.5 682.6 moveto
12 f0
( a SAX parser, a SAX application, or both. In addition,) show
28 669.3 moveto
12 f0
(tags have been written that use the JDBC interface to communicate with a database. ) show
0 640.4 moveto
14 f1
(4.4:) show
22.1 640.4 moveto
14 f1
( Embedded applications) show
0 613.4 moveto
12 f0
(We expect one of the major uses of the PIA to be ``embedded'' applications, with the PIA providing the) show
0 600.1 moveto
12 f0
(primary user interface for some piece of equipment that is ) show
281.2 600.1 moveto
12 f2
(not) show
296.7 600.1 moveto
12 f0
( a general-purpose computer. There are) show
0 586.8 moveto
12 f0
(several features of the PIA that make it suitable for embedded applications. ) show
18.1 563.8 moveto
3.3 3.3 c  fill 
28 559.7 moveto
12 f1
(Small memory footprint) show
28 546.4 moveto
12 f0
(Because of the PIA's efficient, ``pass-through'' document-processing architecture, it is fairly) show
28 533.1 moveto
12 f0
(compact. The Java version occupies about 16Mb, including the Java run-time; we expect the C) show
28 519.8 moveto
12 f0
(version to do ) show
93.6 519.8 moveto
12 f2
(significantly) show
152.9 519.8 moveto
12 f0
( better. ) show
18.1 496.8 moveto
3.3 3.3 c  fill 
28 492.7 moveto
12 f1
(Ease of integration) show
28 479.4 moveto
12 f0
(Because of the simplicity of special-purpose tag handlers, it is easy to integrate the PIA with any) show
28 466.1 moveto
12 f0
(special-purpose hardware or software services on the appliance. ) show
18.1 443.1 moveto
3.3 3.3 c  fill 
28 439 moveto
12 f1
(Ease of customization) show
28 425.7 moveto
12 f0
(The PIA makes it possible for a user or group of users to customize an appliance by editing) show
28 412.4 moveto
12 f0
(documents, rather than by installing software. It is widely recognized that incompatibilities and) show
28 399.1 moveto
12 f0
(bugs in installed applications are the major contributor to the unreliability of PC software, so this) show
28 385.8 moveto
12 f0
(represents a major advantage for PIA-based appliances. ) show
18.1 362.8 moveto
3.3 3.3 c  fill 
28 358.7 moveto
12 f1
(Security and safety) show
28 345.4 moveto
12 f0
(The PIa's tagsets make it ideal for use on appliances that store or process documents, since it's) show
28 332.1 moveto
12 f0
(easy for the application to ensure that all effects of the processing are confined to the document) show
28 318.8 moveto
12 f0
(itself. ) show
201 294.9 moveto
10 f4
(table of contents) show
0 285.9 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 249 moveto
18 f1
(5:) show
14.9 249 moveto
18 f1
( ) show
19.4 249 moveto
18 f1
(Conclusions) show
0 221.1 moveto
12 f0
(The PIA approach offers a way to build Web applications that can be easily customized and maintained.) show
0 207.8 moveto
12 f0
(It leverages existing and future XML tools and allows developers to create application-specific) show
0 194.5 moveto
12 f0
(vocabularies so that the documents which comprise Web application may be created and modified) show
0 181.2 moveto
12 f0
(without customized programming skills or tools. ) show
3.5 150.6 moveto
12 f1
(Server-side Document Processing ) show
3.8 133.3 moveto
12 f2
(XML-compliant) show
142.2 133.1 moveto
12 f0
(Standard tools \(editors, parsers, etc.\) can be used for development.) show
142.2 119.8 moveto
12 f0
(Processing can be separate or embedded in documents. ) show
3.5 102.5 moveto
12 f2
(Embeddable) show
142.2 102.3 moveto
12 f0
(Documents can contain their own processing, embedded in the portion of) show
142.2 89 moveto
12 f0
(the document that has to be processed. ) show
pagelevel restore
showpage
%%Page: 20 20
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
3.5 709.4 moveto
12 f2
(Separable) show
142.2 709.2 moveto
12 f0
(Separate tagsets can be shared among documents. ) show
3.5 691.9 moveto
12 f2
(User-extensible) show
142.2 691.7 moveto
12 f0
(User-Defined tags have the same syntax as built-in operations. ) show
3.5 674.4 moveto
12 f2
(Operates on parse trees) show
142.2 674.2 moveto
12 f0
(Impossible to generate a syntactically-incorrect output document. ) show
3.5 656.9 moveto
12 f2
(Small set of primitives) show
142.2 656.7 moveto
12 f0
(Easily ported to other programming languages. Easy to learn. ) show
3.5 639.4 moveto
12 f2
(Turing complete) show
142.2 639.2 moveto
12 f0
(It is possible to write arbitrary programs in this XML language \(not that) show
142.2 625.9 moveto
12 f0
(you would want to, but it it is nice to not have to worry about running into) show
142.2 612.6 moveto
12 f0
(brick walls\) ) show
3.5 595.3 moveto
12 f2
(Efficient) show
142.2 595.1 moveto
12 f0
(Documents can be streamed through, meaning that the browser can get the) show
142.2 581.8 moveto
12 f0
(first part of a page while the rest is still being generated. ) show
3.5 563.8 moveto
12 f1
(Web-based application platform ) show
3.5 546.5 moveto
12 f2
(Flexible configuration) show
142.2 546.3 moveto
12 f0
(Active documents and data easily separated, but can be shown in the same) show
142.2 533 moveto
12 f0
(URL tree. ) show
3.8 515.7 moveto
12 f2
(XML configuration files) show
142.2 515.5 moveto
12 f0
(Full power of document-processing language available at configuration) show
142.2 502.2 moveto
12 f0
(time. ) show
3.5 484.9 moveto
12 f2
(Java-based) show
142.2 484.7 moveto
12 f0
(Platform-agnostic. Runs on Linux, Unix, Windows. ) show
4.1 467.4 moveto
12 f2
(Agent-based event handling) show
142.2 467.2 moveto
12 f0
(Processing can occur based on transaction features \(request and response) show
142.2 453.9 moveto
12 f0
(headers\) or time. Agents can modify transactions. ) show
3.5 436.6 moveto
12 f2
(Client / Server / Proxy) show
142.2 436.4 moveto
12 f0
(Web engine operates in multiple modes for maximum flexibility. ) show
0 404 moveto
14 f1
(5.1:) show
22.1 404 moveto
14 f1
( Would the PIA be useful for ) show
198.7 404 moveto
14 f3
(your) show
225.1 404 moveto
14 f1
( web application?) show
18.1 380.6 moveto
3.3 3.3 c  fill 
28 376.5 moveto
12 f1
(Group applications) show
127 376.5 moveto
12 f0
( ) show
28 363.2 moveto
12 f0
(This is the archetypal application area for the PIA. If you're building a web-based workgroup or) show
28 349.9 moveto
12 f0
(small office application, especially one that is going to be customized by group members without) show
28 336.6 moveto
12 f0
(programming skills, the PIA may be well-suited. ) show
18.1 313.6 moveto
3.3 3.3 c  fill 
28 309.5 moveto
12 f1
(Personal applications) show
137.6 309.5 moveto
12 f0
( ) show
28 296.2 moveto
12 f0
(This is another area where the PIA has enormous potential. Since the PIA is highly portable it can) show
28 282.9 moveto
12 f0
(run on almost anyone's desktop; since PIA-based applications are ) show
346.9 282.9 moveto
12 f2
(designed) show
389.8 282.9 moveto
12 f0
( to be easily) show
28 269.6 moveto
12 f0
(customized, every user can personalize and improve their own environment. Also consider) show
28 256.3 moveto
12 f0
(systems in which ) show
113.6 256.3 moveto
12 f2
(both) show
134.9 256.3 moveto
12 f0
( personal and workgroup PIA's are present and interacting, or in which a) show
28 243 moveto
12 f0
(personal PIA interacts with web-based appliances. ) show
18.1 220 moveto
3.3 3.3 c  fill 
28 215.9 moveto
12 f1
(Public web sites) show
109.3 215.9 moveto
12 f0
( and ) show
132.6 215.9 moveto
12 f1
(Enterprise applications) show
252.2 215.9 moveto
12 f0
( ) show
28 202.6 moveto
12 f0
(The PIA's offline document processing can be a powerful tool for organizing a public web site,) show
28 189.3 moveto
12 f0
(and a personal PIA server is almost ideal for quickly previewing a site. The PIA can also be) show
28 176 moveto
12 f0
(integrated with an existing server for form handling. Currently, however, the performance is not) show
28 162.7 moveto
12 f0
(up to serving a high-traffic site and the security, while potentially high, is still unproven. In the) show
28 149.4 moveto
12 f0
(more protected enterprise environment, a PIA-based server could be a useful ) show
399.2 149.4 moveto
12 f2
(adjunct) show
435.4 149.4 moveto
12 f0
( to a site,) show
28 136.1 moveto
12 f0
(serving as a platform for a subset of the site's applications. As the PIA's performance improves) show
28 122.8 moveto
12 f0
(and it becomes better-integrated with servers such as Apache, we expect it to become more useful) show
28 109.5 moveto
12 f0
(at this level as well. ) show
18.1 86.5 moveto
3.3 3.3 c  fill 
28 82.4 moveto
12 f1
(Embedded applications) show
148.3 82.4 moveto
12 f0
( ) show
pagelevel restore
showpage
%%Page: 21 21
%%BeginPageSetup
/pagelevel save def
54 0 translate
%%EndPageSetup
newpath 0 72 moveto 504 0 rlineto 0 648 rlineto -504 0 rlineto  closepath clip newpath
28 709.2 moveto
12 f0
(Until the C version of the PIA is completed, the PIA is probably not suitable for use on slow) show
28 695.9 moveto
12 f0
(CPU's with limited memory, such as are typical in many embedded applications. It ) show
430.2 695.9 moveto
12 f2
(is) show
438.2 695.9 moveto
12 f0
( suitable for) show
28 682.6 moveto
12 f0
(high-end systems that are capable of supporting a JVM, and is highly suitable for rapid) show
28 669.3 moveto
12 f0
(prototyping of web-based interfaces which can then be re-implemented using other techniques. ) show
201 645.4 moveto
10 f4
(table of contents) show
0 636.4 moveto
504 0 rlineto 0 -1.4 rlineto -504 0 rlineto closepath  fill 
0 605.1 moveto
12 f1
(Copyright \251 1999 Ricoh Silicon Valley) show
0 591.3 moveto
12 f1
($Id$) show
0 578.2 moveto
12 f2
(Stephen R. Savitzky) show
93.6 578.2 moveto
12 f2
( <) show
104.6 578.2 moveto
12 f2
(steve@rsv.ricoh.com) show
205.6 578.2 moveto
12 f2
(>) show
pagelevel restore
showpage
%%EOF
